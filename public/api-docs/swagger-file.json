{
  "swagger": 2,
  "info": {
    "description": "Exlpore the cable API's. Get a key <a href='../key-management'>here</a> to interact with the API's",
    "version": "0.0.1",
    "title": "Cable API"
  },
  "host": "cable-api.herokuapp.com",
  "basePath": "/api-docs",
  "paths": {
    "/statusentry": {
      "post": {
        "tags": [
          "Status Entry", "Domain : Common"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StatusEntry"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/statusentry/{id}": {
      "get": {
        "tags": [
          "Status Entry", "Domain : Common"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "Status Entry",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/StatusEntry"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Status Entry", "Domain : Common"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StatusEntry"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/StatusEntry"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Status Entry", "Domain : Common"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/contact": {
      "post": {
        "tags": [
          "Contact", "Domain : Common"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Contact"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/contact/{id}": {
      "get": {
        "tags": [
          "Contact", "Domain : Common"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "Contact ",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Contact"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Contact", "Domain : Common"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Contact"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Contact"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Contact", "Domain : Common"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/cmts": {
      "post": {
        "tags": [
          "CMTS", "Domain : Resource"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CMTS"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/cmts/{id}": {
      "get": {
        "tags": [
          "CMTS", "Domain : Resource"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "CM TS",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CMTS"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "CMTS", "Domain : Resource"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CMTS"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CMTS"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "CMTS", "Domain : Resource"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/sitelist": {
      "post": {
        "tags": [
          "Site List", "Domain : Location"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SiteList"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/sitelist/{id}": {
      "get": {
        "tags": [
          "Site List", "Domain : Location"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "Site List",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SiteList"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Site List", "Domain : Location"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SiteList"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SiteList"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Site List", "Domain : Location"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/ack": {
      "post": {
        "tags": [
          "ACK", "Domain : Common"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ACK"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ack/{id}": {
      "get": {
        "tags": [
          "ACK", "Domain : Common"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "AC K",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ACK"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "ACK", "Domain : Common"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ACK"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ACK"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "ACK", "Domain : Common"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/productorder": {
      "post": {
        "tags": [
          "Product Order", "Domain : Interaction"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductOrder"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/productorder/{id}": {
      "get": {
        "tags": [
          "Product Order", "Domain : Interaction"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "Product Order",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ProductOrder"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Product Order", "Domain : Interaction"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductOrder"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ProductOrder"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Product Order", "Domain : Interaction"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/usercredential": {
      "post": {
        "tags": [
          "User Credential", "Domain : Customer"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User Credential"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/usercredential/{id}": {
      "get": {
        "tags": [
          "User Credential", "Domain : Customer"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "User  Credential",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User Credential"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "User Credential", "Domain : Customer"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User Credential"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User Credential"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "User Credential", "Domain : Customer"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/billcharge": {
      "post": {
        "tags": [
          "Bill Charge", "Domain : Interaction"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Bill Charge"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/billcharge/{id}": {
      "get": {
        "tags": [
          "Bill Charge", "Domain : Interaction"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "Bill  Charge",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Bill Charge"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Bill Charge", "Domain : Interaction"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Bill Charge"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Bill Charge"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Bill Charge", "Domain : Interaction"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/serviceorderitem": {
      "post": {
        "tags": [
          "Service Order Item", "Domain : Interaction"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Service Order Item"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/serviceorderitem/{id}": {
      "get": {
        "tags": [
          "Service Order Item", "Domain : Interaction"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "Service  Order Item",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Service Order Item"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Service Order Item", "Domain : Interaction"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Service Order Item"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Service Order Item"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Service Order Item", "Domain : Interaction"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/resource/resourceport": {
      "post": {
        "tags": [
          "Resource Port", "Domain : Resource"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResourcePort"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/resource/resourceport/{id}": {
      "get": {
        "tags": [
          "Resource Port", "Domain : Resource"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "Resource Port",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResourcePort"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Resource Port", "Domain : Resource"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResourcePort"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResourcePort"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Resource Port", "Domain : Resource"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/product/epl": {
      "post": {
        "tags": [
          "EPL Product", "Domain : Product"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EPL Product"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/product/epl/{id}": {
      "get": {
        "tags": [
          "EPL Product", "Domain : Product"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "EP L Product",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/EPL Product"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "EPL Product", "Domain : Product"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EPL Product"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/EPL Product"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "EPL Product", "Domain : Product"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/faxnumber": {
      "post": {
        "tags": [
          "Fax Number", "Domain : Common"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FaxNumber"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/faxnumber/{id}": {
      "get": {
        "tags": [
          "Fax Number", "Domain : Common"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "Fax Number",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/FaxNumber"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Fax Number", "Domain : Common"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FaxNumber"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/FaxNumber"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Fax Number", "Domain : Common"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/productorder/case3_final/productorderitem": {
      "post": {
        "tags": [
          "Product Order Item", "Domain : Interaction"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductOrderItem"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/productorder/case3_final/productorderitem/{id}": {
      "get": {
        "tags": [
          "Product Order Item", "Domain : Interaction"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "Product OrderItem",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ProductOrderItem"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Product Order Item", "Domain : Interaction"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductOrderItem"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ProductOrderItem"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Product Order Item", "Domain : Interaction"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/customerbillspec": {
      "post": {
        "tags": [
          "Customer Bill Spec", "Domain : Interaction"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerBillSpec"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/customerbillspec/{id}": {
      "get": {
        "tags": [
          "Customer Bill Spec", "Domain : Interaction"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "Customer BillSpec",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CustomerBillSpec"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Customer Bill Spec", "Domain : Interaction"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerBillSpec"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CustomerBillSpec"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Customer Bill Spec", "Domain : Interaction"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/ticket/{id}/assignedgroup": {
      "post": {
        "tags": [
          "Ticket AssignedGroup", "Domain : Interaction"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of the ticket",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Ticket AssignedGroup"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      },
      "get": {
        "tags": [
          "Ticket AssignedGroup", "Domain : Interaction"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "Ticket  AssignedGroup",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of the ticket",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Ticket AssignedGroup"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Ticket AssignedGroup", "Domain : Interaction"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Ticket AssignedGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Ticket AssignedGroup"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Ticket AssignedGroup", "Domain : Interaction"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/service": {
      "post": {
        "tags": [
          "Service", "Domain : Service"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Service"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/service/{id}": {
      "get": {
        "tags": [
          "Service", "Domain : Service"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "Service ",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Service"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Service", "Domain : Service"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Service"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Service"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Service", "Domain : Service"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/resourceorder": {
      "post": {
        "tags": [
          "Resource Order", "Domain : Interaction"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResourceOrder"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/resourceorder/{id}": {
      "get": {
        "tags": [
          "Resource Order", "Domain : Interaction"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "Resource Order",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResourceOrder"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Resource Order", "Domain : Interaction"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResourceOrder"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResourceOrder"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Resource Order", "Domain : Interaction"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/paymentitem": {
      "post": {
        "tags": [
          "Payment Item", "Domain : Interaction"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PaymentItem"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/paymentitem/{id}": {
      "get": {
        "tags": [
          "Payment Item", "Domain : Interaction"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "Payment Item",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PaymentItem"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Payment Item", "Domain : Interaction"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PaymentItem"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PaymentItem"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Payment Item", "Domain : Interaction"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/document": {
      "post": {
        "tags": [
          "Document", "Domain : Interaction"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/document/{id}": {
      "get": {
        "tags": [
          "Document", "Domain : Interaction"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "Document ",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Document", "Domain : Interaction"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Document", "Domain : Interaction"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/preference": {
      "post": {
        "tags": [
          "Preference", "Domain : Customer"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Preference"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/preference/{id}": {
      "get": {
        "tags": [
          "Preference", "Domain : Customer"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "Preference ",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Preference"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Preference", "Domain : Customer"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Preference"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Preference"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Preference", "Domain : Customer"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/servicespecification": {
      "post": {
        "tags": [
          "Service Specification", "Domain : Service"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Service Specification"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/servicespecification/{id}": {
      "get": {
        "tags": [
          "Service Specification", "Domain : Service"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "Service  Specification",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Service Specification"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Service Specification", "Domain : Service"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Service Specification"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Service Specification"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Service Specification", "Domain : Service"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/resource/card": {
      "post": {
        "tags": [
          "Card", "Domain : Resource"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Card"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/resource/card/{id}": {
      "get": {
        "tags": [
          "Card", "Domain : Resource"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "Card ",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Card"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Card", "Domain : Resource"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Card"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Card"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Card", "Domain : Resource"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/orderdesign": {
      "post": {
        "tags": [
          "Order Design", "Domain : Interaction"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OrderDesign"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/orderdesign/{id}": {
      "get": {
        "tags": [
          "Order Design", "Domain : Interaction"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "Order Design",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/OrderDesign"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Order Design", "Domain : Interaction"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OrderDesign"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/OrderDesign"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Order Design", "Domain : Interaction"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/ticket": {
      "post": {
        "tags": [
          "Ticket", "Domain : Interaction"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Ticket in DB"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ticket/{id}": {
      "get": {
        "tags": [
          "Ticket", "Domain : Interaction"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "Ticket  in DB",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Ticket in DB"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Ticket", "Domain : Interaction"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Ticket in DB"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Ticket in DB"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Ticket", "Domain : Interaction"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/paymentmethod": {
      "post": {
        "tags": [
          "Payment Method", "Domain : Customer"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PaymentMethod"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/paymentmethod/{id}": {
      "get": {
        "tags": [
          "Payment Method", "Domain : Customer"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "Payment Method",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PaymentMethod"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Payment Method", "Domain : Customer"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PaymentMethod"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PaymentMethod"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Payment Method", "Domain : Customer"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/customer": {
      "post": {
        "tags": [
          "Customer", "Domain : Customer"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/customer/{id}": {
      "get": {
        "tags": [
          "Customer", "Domain : Customer"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "Customer ",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Customer", "Domain : Customer"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Customer", "Domain : Customer"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/servicerole": {
      "post": {
        "tags": [
          "Service Role", "Domain : Interaction"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceRole"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/servicerole/{id}": {
      "get": {
        "tags": [
          "Service Role", "Domain : Interaction"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "Service Role",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ServiceRole"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Service Role", "Domain : Interaction"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceRole"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ServiceRole"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Service Role", "Domain : Interaction"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/service/evc": {
      "post": {
        "tags": [
          "EVC Service", "Domain : Service"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EVC Service"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/service/evc/{id}": {
      "get": {
        "tags": [
          "EVC Service", "Domain : Service"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "EV C Service",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/EVC Service"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "EVC Service", "Domain : Service"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EVC Service"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/EVC Service"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "EVC Service", "Domain : Service"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/ticketcategory": {
      "post": {
        "tags": [
          "Ticket Category", "Domain : Interaction"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TicketCategory"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ticketcategory/{id}": {
      "get": {
        "tags": [
          "Ticket Category", "Domain : Interaction"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "Ticket Category",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TicketCategory"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Ticket Category", "Domain : Interaction"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TicketCategory"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TicketCategory"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Ticket Category", "Domain : Interaction"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/cablemodem": {
      "post": {
        "tags": [
          "Cable Modem", "Domain : Resource"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CableModem"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/cablemodem/{id}": {
      "get": {
        "tags": [
          "Cable Modem", "Domain : Resource"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "Cable Modem",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CableModem"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Cable Modem", "Domain : Resource"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CableModem"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CableModem"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Cable Modem", "Domain : Resource"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/productspecification": {
      "post": {
        "tags": [
          "Product Specification", "Domain : Product"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductSpecification"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/productspecification/{id}": {
      "get": {
        "tags": [
          "Product Specification", "Domain : Product"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "Product  Specification",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ProductSpecification"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Product Specification", "Domain : Product"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductSpecification"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ProductSpecification"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Product Specification", "Domain : Product"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/externalsystemreference": {
      "post": {
        "tags": [
          "UnSuported"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExternalSystemReference"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/externalsystemreference/{id}": {
      "get": {
        "tags": [
          "UnSuported"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "External SystemReference",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ExternalSystemReference"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "UnSuported"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExternalSystemReference"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ExternalSystemReference"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "UnSuported"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/featurecollection": {
      "post": {
        "tags": [
          "Feature Collection", "Domain : Location"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FeatureCollection"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/featurecollection/{id}": {
      "get": {
        "tags": [
          "Feature Collection", "Domain : Location"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "Feature Collection",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/FeatureCollection"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Feature Collection", "Domain : Location"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FeatureCollection"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/FeatureCollection"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Feature Collection", "Domain : Location"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/user": {
      "post": {
        "tags": [
          "User", "Domain : Customer"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "tags": [
          "User", "Domain : Customer"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "User ",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "User", "Domain : Customer"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "User", "Domain : Customer"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/usergroup": {
      "post": {
        "tags": [
          "User Group", "Domain : Customer"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserGroup"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/usergroup/{id}": {
      "get": {
        "tags": [
          "User Group", "Domain : Customer"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "User Group",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UserGroup"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "User Group", "Domain : Customer"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UserGroup"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "User Group", "Domain : Customer"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/individual": {
      "post": {
        "tags": [
          "Individual", "Domain : Customer"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Individual"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/individual/{id}": {
      "get": {
        "tags": [
          "Individual", "Domain : Customer"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "Individual ",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Individual"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Individual", "Domain : Customer"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Individual"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Individual"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Individual", "Domain : Customer"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/organization": {
      "post": {
        "tags": [
          "Organization", "Domain : Customer"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Organization"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/organization/{id}": {
      "get": {
        "tags": [
          "Organization", "Domain : Customer"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "Organization ",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Organization"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Organization", "Domain : Customer"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Organization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Organization"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Organization", "Domain : Customer"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/postalcontact": {
      "post": {
        "tags": [
          "Postal Contact", "Domain : Common"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostalContact"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/postalcontact/{id}": {
      "get": {
        "tags": [
          "Postal Contact", "Domain : Common"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "Postal Contact",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PostalContact"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Postal Contact", "Domain : Common"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostalContact"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PostalContact"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Postal Contact", "Domain : Common"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/device": {
      "post": {
        "tags": [
          "Device", "Domain : Resource"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Device"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/device/{id}": {
      "get": {
        "tags": [
          "Device", "Domain : Resource"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "Device ",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Device"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Device", "Domain : Resource"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Device"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Device"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Device", "Domain : Resource"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/product/evc": {
      "post": {
        "tags": [
          "EVC Product", "Domain : Product"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EVCProduct"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/product/evc/{id}": {
      "get": {
        "tags": [
          "EVC Product", "Domain : Product"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "EVC Product",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/EVCProduct"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "EVC Product", "Domain : Product"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EVCProduct"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/EVCProduct"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "EVC Product", "Domain : Product"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/product/uni": {
      "post": {
        "tags": [
          "UNI Product", "Domain : Product"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UNIProduct"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/product/uni/{id}": {
      "get": {
        "tags": [
          "UNI Product", "Domain : Product"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "UN I Product",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UNIProduct"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "UNI Product", "Domain : Product"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UNIProduct"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UNIProduct"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "UNI Product", "Domain : Product"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/site": {
      "post": {
        "tags": [
          "Site", "Domain : Location"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Site"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/site/{id}": {
      "get": {
        "tags": [
          "Site", "Domain : Location"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "Site ",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Site"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Site", "Domain : Location"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Site"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Site"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Site", "Domain : Location"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/customerorder": {
      "post": {
        "tags": [
          "Customer Order", "Domain : Interaction"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerOrder"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/customerorder/{id}": {
      "get": {
        "tags": [
          "Customer Order", "Domain : Interaction"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "Customer Order",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CustomerOrder"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Customer Order", "Domain : Interaction"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerOrder"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CustomerOrder"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Customer Order", "Domain : Interaction"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/account": {
      "post": {
        "tags": [
          "Account", "Domain : Customer"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/account/{id}": {
      "get": {
        "tags": [
          "Account", "Domain : Customer"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "Account ",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Account", "Domain : Customer"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Account", "Domain : Customer"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/productconfiguration": {
      "post": {
        "tags": [
          "Product Configuration", "Domain : Product"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductConfiguration"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/productconfiguration/{id}": {
      "get": {
        "tags": [
          "Product Configuration", "Domain : Product"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "Product Configuration",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ProductConfiguration"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Product Configuration", "Domain : Product"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductConfiguration"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ProductConfiguration"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Product Configuration", "Domain : Product"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/service/uniconfiguration": {
      "post": {
        "tags": [
          "UNI Service Configuration", "Domain : Service"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UNIServiceConfiguration"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/service/uniconfiguration/{id}": {
      "get": {
        "tags": [
          "UNI Service Configuration", "Domain : Service"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "UN I ServiceConfiguration",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UNIServiceConfiguration"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "UNI Service Configuration", "Domain : Service"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UNIServiceConfiguration"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UNIServiceConfiguration"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "UNI Service Configuration", "Domain : Service"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/user/{id}/tickets": {
      "post": {
        "tags": [
          "Users Tickets", "Domain : Interaction"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of User to whom the ticket needs to be created",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UsersTickets"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      },
      "get": {
        "tags": [
          "Users Tickets", "Domain : Interaction"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "Users  Tickets",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of User whose tickets need to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UsersTickets"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "UnSuported"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UsersTickets"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UsersTickets"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "UnSuported"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/service/evcconfiguration": {
      "post": {
        "tags": [
          "EVC Service Configuration", "Domain : Service"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EVCServiceConfiguration"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/service/evcconfiguration/{id}": {
      "get": {
        "tags": [
          "EVC Service Configuration", "Domain : Service"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "EV C Service Configuration",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/EVCServiceConfiguration"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "EVC Service Configuration", "Domain : Service"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EVCServiceConfiguration"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/EVCServiceConfiguration"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "EVC Service Configuration", "Domain : Service"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/propertyaddress": {
      "post": {
        "tags": [
          "Property Address", "Domain : Location"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PropertyAddress"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/propertyaddress/{id}": {
      "get": {
        "tags": [
          "Property Address", "Domain : Location"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "Property Address",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PropertyAddress"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Property Address", "Domain : Location"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PropertyAddress"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PropertyAddress"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Property Address", "Domain : Location"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/product/eplconfiguration": {
      "post": {
        "tags": [
          "EPL Product Configuration", "Domain : Product"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EPLProductConfiguration"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/product/eplconfiguration/{id}": {
      "get": {
        "tags": [
          "EPL Product Configuration", "Domain : Product"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "EP L Product Configuration",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/EPLProductConfiguration"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "EPL Product Configuration", "Domain : Product"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EPLProductConfiguration"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/EPLProductConfiguration"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "EPL Product Configuration", "Domain : Product"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/productprice": {
      "post": {
        "tags": [
          "Product Price", "Domain : Product"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductPrice"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/productprice/{id}": {
      "get": {
        "tags": [
          "Product Price", "Domain : Product"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "Product Price",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ProductPrice"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Product Price", "Domain : Product"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductPrice"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ProductPrice"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Product Price", "Domain : Product"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/customerquoteitem": {
      "post": {
        "tags": [
          "Customer Quote Item", "Domain : Customer"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerQuoteItem"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/customerquoteitem/{id}": {
      "get": {
        "tags": [
          "Customer Quote Item", "Domain : Customer"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "Customer QuoteItem",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CustomerQuoteItem"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Customer Quote Item", "Domain : Customer"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerQuoteItem"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CustomerQuoteItem"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Customer Quote Item", "Domain : Customer"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/geographicaddress": {
      "post": {
        "tags": [
          "Geographic Address", "Domain : Location"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GeographicAddress"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/geographicaddress/{id}": {
      "get": {
        "tags": [
          "Geographic Address", "Domain : Location"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "Geographic  Address",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GeographicAddress"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Geographic Address", "Domain : Location"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GeographicAddress"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GeographicAddress"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Geographic Address", "Domain : Location"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/property": {
      "post": {
        "tags": [
          "Property", "Domain : Location"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Property"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/property/{id}": {
      "get": {
        "tags": [
          "Property", "Domain : Location"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "Property ",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Property"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Property", "Domain : Location"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Property"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Property"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Property", "Domain : Location"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/configurationdata": {
      "post": {
        "tags": [
          "Configuration Data", "Domain : Service"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConfigurationData"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/configurationdata/{id}": {
      "get": {
        "tags": [
          "Configuration Data", "Domain : Service"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "Configuration Data",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ConfigurationData"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Configuration Data", "Domain : Service"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConfigurationData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ConfigurationData"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Configuration Data", "Domain : Service"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/feature": {
      "post": {
        "tags": [
          "Feature", "Domain : Location"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Feature"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/feature/{id}": {
      "get": {
        "tags": [
          "Feature", "Domain : Location"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "Feature ",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Feature"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Feature", "Domain : Location"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Feature"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Feature"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Feature", "Domain : Location"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/service/uni": {
      "post": {
        "tags": [
          "UNI Service", "Domain : Service"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UNIService"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/service/uni/{id}": {
      "get": {
        "tags": [
          "UNI Service", "Domain : Service"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "UN I Service",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UNIService"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "UNI Service", "Domain : Service"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UNIService"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UNIService"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "UNI Service", "Domain : Service"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/asbuiltorderdesign": {
      "post": {
        "tags": [
          "As Built Design", "Domain : Service"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AsBuiltDesign"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/asbuiltorderdesign/{id}": {
      "get": {
        "tags": [
          "As Built Design", "Domain : Service"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "As  Built Design",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AsBuiltDesign"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "As Built Design", "Domain : Service"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AsBuiltDesign"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AsBuiltDesign"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "As Built Design", "Domain : Service"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/customerorderitem": {
      "post": {
        "tags": [
          "Customer Order Item", "Domain : Customer"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerOrderItem"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/customerorderitem/{id}": {
      "get": {
        "tags": [
          "Customer Order Item", "Domain : Customer"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "Customer OrderItem",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CustomerOrderItem"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Customer Order Item", "Domain : Customer"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerOrderItem"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CustomerOrderItem"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Customer Order Item", "Domain : Customer"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/paymentplan": {
      "post": {
        "tags": [
          "Payment Plan", "Domain : Customer"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PaymentPlan"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/paymentplan/{id}": {
      "get": {
        "tags": [
          "Payment Plan", "Domain : Customer"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "Payment Plan",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PaymentPlan"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Payment Plan", "Domain : Customer"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PaymentPlan"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PaymentPlan"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Payment Plan", "Domain : Customer"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/systemcontact": {
      "post": {
        "tags": [
          "System Contact", "Domain : Customer"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SystemContact"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/systemcontact/{id}": {
      "get": {
        "tags": [
          "System Contact", "Domain : Customer"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "System  Contact",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SystemContact"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "System Contact", "Domain : Customer"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SystemContact"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SystemContact"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "System Contact", "Domain : Customer"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/telephonenumber": {
      "post": {
        "tags": [
          "Telephone Number", "Domain : Common"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TelephoneNumber"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/telephonenumber/{id}": {
      "get": {
        "tags": [
          "Telephone Number", "Domain : Common"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "Telephone  Number",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TelephoneNumber"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Telephone Number", "Domain : Common"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TelephoneNumber"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TelephoneNumber"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Telephone Number", "Domain : Common"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/serviceorder": {
      "post": {
        "tags": [
          "Service Order", "Domain : Interaction"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceOrder"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/serviceorder/{id}": {
      "get": {
        "tags": [
          "Service Order", "Domain : Interaction"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "Service  Order",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ServiceOrder"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Service Order", "Domain : Interaction"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceOrder"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ServiceOrder"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Service Order", "Domain : Interaction"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/serviceorder/sat": {
      "post": {
        "tags": [
          "SAT", "Domain : Interaction"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SAT"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/serviceorder/sat/{id}": {
      "get": {
        "tags": [
          "SAT", "Domain : Interaction"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "SA T",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SAT"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "SAT", "Domain : Interaction"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SAT"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SAT"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "SAT", "Domain : Interaction"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/product": {
      "post": {
        "tags": [
          "Product", "Domain : Product"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/product/{id}": {
      "get": {
        "tags": [
          "Product", "Domain : Product"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "Product ",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Product", "Domain : Product"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Product", "Domain : Product"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/comment": {
      "post": {
        "tags": [
          "Comment", "Domain : Interaction"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Comment"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/comment/{id}": {
      "get": {
        "tags": [
          "Comment", "Domain : Interaction"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "Comment ",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Comment"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Comment", "Domain : Interaction"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Comment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Comment"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Comment", "Domain : Interaction"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/customerpayment": {
      "post": {
        "tags": [
          "Customer Payment", "Domain : Customer"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerPayment"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/customerpayment/{id}": {
      "get": {
        "tags": [
          "Customer Payment", "Domain : Customer"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "Customer Payment",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CustomerPayment"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Customer Payment", "Domain : Customer"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerPayment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CustomerPayment"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Customer Payment", "Domain : Customer"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/customerquote": {
      "post": {
        "tags": [
          "Customer Quote", "Domain : Interaction"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerQuote"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/customerquote/{id}": {
      "get": {
        "tags": [
          "Customer Quote", "Domain : Interaction"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "Customer Quote",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CustomerQuote"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Customer Quote", "Domain : Interaction"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerQuote"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CustomerQuote"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Customer Quote", "Domain : Interaction"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/productoffering": {
      "post": {
        "tags": [
          "Product Offering", "Domain : Product"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductOffering"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/productoffering/{id}": {
      "get": {
        "tags": [
          "Product Offering", "Domain : Product"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "Product Offering",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ProductOffering"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Product Offering", "Domain : Product"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductOffering"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ProductOffering"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Product Offering", "Domain : Product"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/ticketlocation": {
      "post": {
        "tags": [
          "Ticket Location", "Domain : Location"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TicketLocation"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ticketlocation/{id}": {
      "get": {
        "tags": [
          "Ticket Location", "Domain : Location"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "Ticket Location",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TicketLocation"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Ticket Location", "Domain : Location"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TicketLocation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TicketLocation"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Ticket Location", "Domain : Location"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/serviceconfiguration": {
      "post": {
        "tags": [
          "Service Configuration", "Domain : Service"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceConfiguration"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/serviceconfiguration/{id}": {
      "get": {
        "tags": [
          "Service Configuration", "Domain : Service"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "Service Configuration",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ServiceConfiguration"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Service Configuration", "Domain : Service"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceConfiguration"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ServiceConfiguration"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Service Configuration", "Domain : Service"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/cableservicearea": {
      "post": {
        "tags": [
          "Cable Service Area", "Domain : Location"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CableServiceArea"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/cableservicearea/{id}": {
      "get": {
        "tags": [
          "Cable Service Area", "Domain : Location"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "Cable ServiceArea",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CableServiceArea"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Cable Service Area", "Domain : Location"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CableServiceArea"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CableServiceArea"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Cable Service Area", "Domain : Location"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/customerbill": {
      "post": {
        "tags": [
          "Customer Bill", "Domain : Interaction"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerBill"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/customerbill/{id}": {
      "get": {
        "tags": [
          "Customer Bill", "Domain : Interaction"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "Customer Bill",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CustomerBill"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Customer Bill", "Domain : Interaction"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerBill"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CustomerBill"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Customer Bill", "Domain : Interaction"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/resource/ethernetinterface": {
      "post": {
        "tags": [
          "Ethernet Interface", "Domain : Service"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EthernetInterface"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/resource/ethernetinterface/{id}": {
      "get": {
        "tags": [
          "Ethernet Interface", "Domain : Service"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "Ethernet Interface",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/EthernetInterface"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Ethernet Interface", "Domain : Service"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EthernetInterface"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/EthernetInterface"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Ethernet Interface", "Domain : Service"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/emailcontact": {
      "post": {
        "tags": [
          "Email Contact", "Domain : Common"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmailContact"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/emailcontact/{id}": {
      "get": {
        "tags": [
          "Email Contact", "Domain : Common"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "Email  Contact",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/EmailContact"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Email Contact", "Domain : Common"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmailContact"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/EmailContact"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Email Contact", "Domain : Common"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    }
  },
  "schemes": [
    "http"
  ],
  "definitions": {
    "Link": {
      "id": "Link",
      "properties": {
        "href": {
          "type": "string"
        },
        "rel": {
          "type": "string"
        }
      }
    },
    "Quantity": {
      "id": "Quantity",
      "properties": {
        "amount": {
          "type": "String"
        },
        "units": {
          "type": "String"
        }
      }
    },
    "Money": {
      "id": "Money",
      "properties": {
        "amount": {
          "type": "String"
        },
        "units": {
          "type": "String"
        }
      }
    },
    "Duration": {
      "id": "Duration",
      "properties": {
        "units": {
          "type": "String"
        },
        "amount": {
          "type": "Number"
        }
      }
    },
    "CostRate": {
      "id": "CostRate",
      "properties": {
        "denominator": {
          "$ref": "Duration"
        },
        "numerator": {
          "$ref": "Money"
        }
      }
    },
    "Account": {
      "type": "object",
      "properties": {
        "sites": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "SiteSummary"
          }
        },
        "primaryUser": {
          "type": "object",
          "$ref": "UserSummary"
        },
        "users": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "UserSummary"
          }
        },
        "taxExemptions": {
          "type": "object",
          "$ref": "TaxExemptions"
        },
        "status": {
          "$ref": "AccountStatus"
        },
        "link": {
          "type": "object",
          "$ref": "Link"
        },
        "creditLimit": {
          "type": "integer"
        },
        "type": {
          "type": "object",
          "$ref": "AccountType"
        },
        "customer": {
          "type": "object",
          "$ref": "CustomerSummary",
          "required": true
        },
        "id": {
          "type": "string"
        },
        "billing": {
          "type": "object",
          "$ref": "BillingSummary",
          "required": true
        },
        "accountNumber": {
          "type": "string"
        },
        "pin": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "financialStatus": {
          "type": "object",
          "$ref": "AccountFinancialStatus",
          "required": true
        },
        "payments": {
          "type": "object",
          "$ref": "PaymentSummary",
          "required": true
        },
        "relatedAccounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "AccountSummary"
          }
        },
        "financials": {
          "type": "object",
          "$ref": "FinancialSummary",
          "required": true
        },
        "devices": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "DeviceSummary"
          }
        },
        "products": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "ProductSummary"
          }
        },
        "preferences": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "PreferenceSummary"
          }
        },
        "serviceAddress": {
          "type": "object",
          "$ref": "PropertyAddress",
          "required": true
        }
      }
    },
    "AccountSummary": {
      "id": "AccountSummary",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Contact": {
      "id": "Contact",
      "properties": {
        "contactType": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "TimePeriod": {
      "id": "TimePeriod",
      "properties": {
        "endDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "startDateTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "AccountContact": {
      "id": "AccountContact",
      "properties": {
        "contactType": {
          "type": "string"
        },
        "contact": {
          "$ref": "Contact"
        },
        "validFor": {
          "$ref": "TimePeriod"
        }
      }
    },
    "SiteCategory": {
      "id": "SiteCategory",
      "properties": {
        "categoryDescription": {
          "type": "string"
        },
        "categoryName": {
          "type": "string"
        }
      }
    },
    "CLLICode": {
      "id": "CLLICode",
      "properties": {
        "clliCustomerSiteCode": {
          "type": "string"
        },
        "clliGeographicCode": {
          "type": "string"
        },
        "clliGeopoliticalCode": {
          "type": "string"
        },
        "clliNetworkSiteCode": {
          "type": "string"
        },
        "clliType": {
          "type": "number"
        },
        "formattedClliCode": {
          "type": "string"
        }
      }
    },
    "GeographicLocation": {
      "id": "GeographicLocation",
      "properties": {
        "property": {
          "$ref": "Property"
        }
      }
    },
    "Property": {
      "id": "Property",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        }
      }
    },
    "ServiceSummary": {
      "id": "ServiceSummary",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        }
      }
    },
    "SiteType": {
      "id": "SiteType",
      "properties": {
        "description": {
          "type": "string"
        },
        "multiTenant": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "validFor": {
          "$ref": "TimePeriod"
        }
      }
    },
    "VHCoordinates": {
      "id": "VHCoordinates",
      "properties": {
        "horizontalCoordinate": {
          "type": "string"
        },
        "verticalCoordinate": {
          "type": "string"
        }
      }
    },
    "PropertyAddress": { },
    "Site": { },
    "SiteSummary": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "type": "object",
          "$ref": "Link"
        }
      }
    },
    "Location": {
      "id": "Location",
      "properties": {
        "site": {
          "$ref": "Site"
        },
        "propertyAddress": {
          "$ref": "PropertyAddress"
        }
      }
    },
    "ProductConfiguration": {
      "id": "ProductConfiguration",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "name": {
          "type": "string"
        },
        "isBundle": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "productStatus": {
          "type": "string"
        },
        "productSerialNumber": {
          "type": "string"
        },
        "validFor": {
          "$ref": "TimePeriod"
        },
        "products": {
          "$ref": "ProductConfiguration"
        },
        "serviceConfigurations": {
          "$ref": "ServiceConfiguration"
        },
        "product": {
          "$ref": "Product"
        },
        "productProperties": {
          "$ref": "ProductProperties"
        }
      }
    },
    "EPLConfiguration": {
      "id": "EPLConfiguration",
      "properties": {
        "bandwidth": {
          "$ref": "Quantity"
        },
        "a_Address": {
          "$ref": "Site"
        },
        "z_Address": {
          "$ref": "Site"
        }
      }
    },
    "EVCProductConfiguration": {
      "id": "EVCProductConfiguration",
      "properties": {
        "bandwidth": {
          "$ref": "Quantity"
        },
        "a_Address": {
          "$ref": "Site"
        },
        "z_Address": {
          "$ref": "Site"
        }
      }
    },
    "UNIProductConfiguration": {
      "id": "UNIProductConfiguration",
      "properties": {
        "bandwidth": {
          "$ref": "Quantity"
        },
        "address": {
          "$ref": "Site"
        }
      }
    },
    "UNIProduct": {
      "id": "UNIProduct",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "name": {
          "type": "string"
        },
        "isBundle": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "productStatus": {
          "type": "string"
        },
        "productSerialNumber": {
          "type": "string"
        },
        "validFor": {
          "$ref": "TimePeriod"
        },
        "uniService": {
          "$ref": "UNIService"
        },
        "uniProductConfiguration": {
          "$ref": "UNIProductConfiguration"
        }
      }
    },
    "EVCService": {
      "id": "EVCService",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "hasStarted": {
          "type": "boolean"
        },
        "isServiceEnabled": {
          "type": "boolean"
        },
        "isMandatory": {
          "type": "boolean"
        },
        "startMode": {
          "type": "number"
        },
        "isStateful": {
          "type": "boolean"
        },
        "isFCCReportable": {
          "type": "boolean"
        },
        "isTSP": {
          "type": "boolean"
        },
        "isResourceFacingService": {
          "type": "boolean"
        },
        "isCustomerFacingService": {
          "type": "boolean"
        },
        "rfsStatus": {
          "type": "number"
        },
        "cfsStatus": {
          "type": "number"
        },
        "customerFacingService": {
          "type": "array",
          "items": {
            "$ref": "EVCService"
          }
        },
        "resourceFacingService": {
          "type": "array",
          "items": {
            "$ref": "EVCService"
          }
        },
        "unis": {
          "type": "array",
          "items": {
            "$ref": "UNIService"
          }
        }
      }
    },
    "EVCProduct": {
      "id": "EVCProduct",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "name": {
          "type": "string"
        },
        "isBundle": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "productStatus": {
          "type": "string"
        },
        "productSerialNumber": {
          "type": "string"
        },
        "validFor": {
          "$ref": "TimePeriod"
        },
        "evcService": {
          "$ref": "EVCService"
        },
        "evcProductConfiguration": {
          "$ref": "EVCProductConfiguration"
        }
      }
    },
    "EPLProduct": {
      "id": "EPLProduct",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "name": {
          "type": "string"
        },
        "isBundle": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "productStatus": {
          "type": "string"
        },
        "productSerialNumber": {
          "type": "string"
        },
        "validFor": {
          "$ref": "TimePeriod"
        },
        "products": {
          "type": "array",
          "items": {
            "$ref": "EPLProduct"
          }
        },
        "productRelationships": {
          "type": "array",
          "items": {
            "$ref": "ProductRelationship"
          }
        },
        "productPrices": {
          "type": "array",
          "items": {
            "$ref": "ProductPrice"
          }
        },
        "productOffering": {
          "$ref": "ProductOffering"
        },
        "configuration": {
          "$ref": "EPLConfiguration"
        },
        "uniProducts": {
          "type": "array",
          "items": {
            "$ref": "UNIProduct"
          }
        },
        "evcProduct": {
          "$ref": "EVCProduct"
        }
      }
    },
    "ProductOrderItem": {
      "id": "ProductOrderItem",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "action": {
          "type": "string"
        },
        "interactionItemStatus": {
          "type": "string"
        },
        "quantity": {
          "$ref": "Quantity"
        },
        "productConfiguration": {
          "$ref": "ProductConfiguration"
        },
        "device": {
          "$ref": "Device"
        },
        "eplProduct": {
          "$ref": "EPLProduct"
        }
      }
    },
    "CustomerQuoteItem": {
      "id": "CustomerQuoteItem",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "nonRecurringCost": {
          "$ref": "Money"
        },
        "recurringCost": {
          "$ref": "CostRate"
        },
        "action": {
          "type": "string"
        },
        "interactionItemStatus": {
          "type": "string"
        },
        "quantity": {
          "$ref": "Quantity"
        }
      }
    },
    "Customer": {
      "id": "Customer",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        }
      }
    },
    "CustomerQuote": {
      "id": "CustomerQuote",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "description": {
          "type": "String"
        },
        "interactionDate": {
          "type": "date"
        },
        "interactionDateComplete": {
          "type": "date"
        },
        "interactionStatus": {
          "type": "string"
        },
        "customer": {
          "$ref": "Customer"
        },
        "customerQuoteItems": {
          "type": "array",
          "items": {
            "$ref": "CustomerQuoteItem"
          }
        }
      }
    },
    "ProductOrder": {
      "id": "ProductOrder",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "feasibility": {
          "type": "string",
          "enum": [
            "FEASIBLE",
            "CHANGED",
            "NOTFEASIBLE"
          ]
        },
        "purchaceOrderNumber": {
          "type": "string"
        },
        "orderType": {
          "type": "string",
          "enum": [
            "ADDRESSCHANGE",
            "BANDWIDTHCHANGE",
            "OTHER"
          ]
        },
        "newState": {
          "$ref": "Quantity"
        },
        "description": {
          "type": "string"
        },
        "saleSource": {
          "type": "string"
        },
        "interactionStatus": {
          "type": "string"
        },
        "assignedPriority": {
          "type": "number"
        },
        "customerOrderType": {
          "type": "string",
          "enum": [
            "NewConnect",
            "Disconnect",
            "RecordsCorrection",
            "Modifiy"
          ]
        },
        "interactionDate": {
          "type": "date"
        },
        "interactionDateComplete": {
          "type": "date"
        },
        "assignedResponseDate": {
          "type": "date"
        },
        "dueDate": {
          "type": "date"
        },
        "productOrderItems": {
          "type": "array",
          "items": {
            "$ref": "ProductOrderItem"
          }
        },
        "customerQuote": {
          "$ref": "CustomerQuote"
        },
        "existingSite": {
          "$ref": "Site"
        },
        "newSite": {
          "$ref": "Site"
        },
        "account": {
          "$ref": "AccountSummary"
        }
      }
    },
    "ServiceOrderItem": { },
    "ServiceOrder": { },
    "EVCServiceConfigurationSummary": {
      "id": "EVCServiceConfiguration",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        }
      }
    },
    "EthernetInterface": {
      "id": "EthernetInterface",
      "properties": {
        "id": {
          "type": "String"
        },
        "link": {
          "$ref": "Link"
        },
        "customerInterfaceNumber": {
          "type": "number"
        },
        "deviceConfigMethod": {
          "type": "String"
        },
        "hasCarrierDetect": {
          "type": "boolean"
        },
        "hasDataLink": {
          "type": "boolean"
        },
        "isInterfaceEnabled": {
          "type": "boolean"
        },
        "vendorInterfaceNumber": {
          "type": "number"
        },
        "interfaceInitResetCount": {
          "type": "number"
        },
        "syncLostCount": {
          "type": "number"
        },
        "physicalPort": {
          "$ref": "PhysicalPort"
        },
        "macAddress": {
          "$ref": "MACAddress"
        },
        "resourcePort": {
          "$ref": "ResourcePort"
        }
      }
    },
    "TerminationPoint": {
      "id": "TerminationPoint",
      "properties": {
        "direction": {
          "type": "string",
          "enum": [
            "Unknown",
            "Sources Traffic",
            "Sinks Traffic",
            "Carries Traffic Bi-Directional"
          ]
        },
        "vendorTPName": {
          "type": "string"
        },
        "typeOfTP": {
          "type": "string"
        },
        "endPointLabel": {
          "type": "string"
        },
        "sideType": {
          "type": "string"
        },
        "ethernetInterfaces": {
          "$ref": "EthernetInterface"
        }
      }
    },
    "NetworkPath": {
      "id": "NetworkPath",
      "properties": {
        "alternatePathIdentifier": {
          "type": "string"
        },
        "noOfChannels": {
          "type": "number"
        },
        "topology": {
          "type": "string"
        },
        "signaling": {
          "type": "string"
        },
        "direction": {
          "type": "string"
        },
        "channelType": {
          "type": "string"
        },
        "framing": {
          "type": "string"
        },
        "terminationPoints": {
          "type": "array",
          "items": {
            "$ref": "TerminationPoint"
          }
        }
      }
    },
    "UNIConfig": {
      "id": "UNIConfig",
      "properties": {
        "configText": {
          "type": "string"
        },
        "configBinary": {
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "configLocation": {
          "$ref": "Link"
        },
        "configActivationType": {
          "type": "string",
          "enum": [
            "Base",
            "Current",
            "Backup",
            "Planned",
            "Test",
            "Template"
          ]
        },
        "bandwidth": {
          "$ref": "Quantity"
        },
        "duplexMode": {
          "type": "number"
        },
        "macLayer": {
          "type": "number"
        },
        "isColorBlind": {
          "type": "boolean"
        },
        "isServiceMultiplexed": {
          "type": "boolean"
        },
        "vlanTagging": {
          "type": "number"
        },
        "mtuSize": {
          "type": "number"
        }
      }
    },
    "UNIServiceConfiguration": {
      "id": "UNIServiceConfiguration",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "hasStarted": {
          "type": "boolean"
        },
        "isServiceEnabled": {
          "type": "boolean"
        },
        "isMandatory": {
          "type": "boolean"
        },
        "startMode": {
          "type": "number"
        },
        "isStateful": {
          "type": "boolean"
        },
        "isFCCReportable": {
          "type": "boolean"
        },
        "isTSP": {
          "type": "boolean"
        },
        "isResourceFacingService": {
          "type": "boolean"
        },
        "isCustomerFacingService": {
          "type": "boolean"
        },
        "rfsStatus": {
          "type": "number"
        },
        "cfsStatus": {
          "type": "number"
        },
        "customerFacingService": {
          "type": "array",
          "items": {
            "$ref": "UNIServiceConfiguration"
          }
        },
        "resourceFacingService": {
          "type": "array",
          "items": {
            "$ref": "UNIServiceConfiguration"
          }
        },
        "config": {
          "$ref": "UNIConfig"
        },
        "path": {
          "$ref": "NetworkPath"
        },
        "uniService": {
          "$ref": "UNIService"
        },
        "evc": {
          "$ref": "EVCServiceConfigurationSummary"
        }
      }
    },
    "EvcSummary": {
      "id": "EvcSummary",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        }
      }
    },
    "MACAddress": {
      "id": "MACAddress",
      "properties": {
        "hostname": {
          "type": "string"
        },
        "macAddress": {
          "type": "string"
        }
      }
    },
    "CardSummary": {
      "id": "CardSummary",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        }
      }
    },
    "PhysicalPortConfig": {
      "id": "PhysicalPortConfig",
      "properties": {
        "physicalMediaType": {
          "type": "number"
        },
        "maxSpeed": {
          "$ref": "Quantity"
        },
        "duplexMode": {
          "type": "number"
        },
        "mgmtInfoValidFor": {
          "$ref": "TimePeriod"
        },
        "retrievalMethodCurrent": {
          "type": "number"
        },
        "retrievalMethodsSupported": {
          "type": "number"
        },
        "configText": {
          "type": "string"
        },
        "configBinary": {
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "configLocation": {
          "$ref": "Link"
        }
      }
    },
    "PhysicalPort": {
      "id": "PhysicalPort",
      "properties": {
        "duplexMode": {
          "type": "number"
        },
        "portNumber": {
          "type": "number"
        },
        "typeOfPort": {
          "type": "number"
        },
        "vendorPortName": {
          "type": "string"
        },
        "ifType": {
          "type": "number"
        },
        "card": {
          "$ref": "CardSummary"
        },
        "configuration": {
          "$ref": "PhysicalPortConfig"
        }
      }
    },
    "ResourcePort": {
      "id": "ResourcePort",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "isEdgeResourcePort": {
          "type": "boolean"
        },
        "usageState": {
          "type": "number"
        },
        "crcStatus": {
          "type": "number"
        },
        "cllicode": {
          "$ref": "CLLICode"
        },
        "physicalPort": {
          "$ref": "PhysicalPort"
        }
      }
    },
    "UNIService": {
      "id": "UNIService",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "hasStarted": {
          "type": "boolean"
        },
        "isServiceEnabled": {
          "type": "boolean"
        },
        "isMandatory": {
          "type": "boolean"
        },
        "startMode": {
          "type": "number"
        },
        "isStateful": {
          "type": "boolean"
        },
        "isFCCReportable": {
          "type": "boolean"
        },
        "isTSP": {
          "type": "boolean"
        },
        "isResourceFacingService": {
          "type": "boolean"
        },
        "isCustomerFacingService": {
          "type": "boolean"
        },
        "cfsStatus": {
          "type": "number"
        },
        "config": {
          "$ref": "UNIConfig"
        },
        "networkPath": {
          "$ref": "NetworkPath"
        },
        "evc": {
          "$ref": "EvcSummary"
        }
      }
    },
    "Changes": {
      "id": "Changes",
      "properties": {
        "change": {
          "type": "string"
        }
      }
    },
    "ResourcePortDeltas": {
      "id": "ResourcePortDeltas",
      "properties": {
        "changes": {
          "type": "array",
          "items": {
            "$ref": "Changes"
          }
        },
        "resourcePortConfiguration": {
          "$ref": "ResourcePort"
        }
      }
    },
    "EthernetInterfaceConfiguration": {
      "id": "EthernetInterfaceConfiguration",
      "properties": {
        "id": {
          "type": "String"
        },
        "link": {
          "$ref": "Link"
        },
        "customerInterfaceNumber": {
          "type": "number"
        },
        "deviceConfigMethod": {
          "type": "String"
        },
        "hasCarrierDetect": {
          "type": "boolean"
        },
        "hasDataLink": {
          "type": "boolean"
        },
        "isInterfaceEnabled": {
          "type": "boolean"
        },
        "vendorInterfaceNumber": {
          "type": "number"
        },
        "interfaceInitResetCount": {
          "type": "number"
        },
        "syncLostCount": {
          "type": "number"
        },
        "ethernetInterface": {
          "type": "object",
          "items": {
            "$ref": "EthernetInterface"
          }
        }
      }
    },
    "EthernetInterfaceDeltas": {
      "id": "EthernetInterfaceDeltas",
      "properties": {
        "id": {
          "type": "String"
        },
        "link": {
          "$ref": "Link"
        },
        "ethernetInterfaceConfiguration": {
          "$ref": "EthernetInterfaceConfiguration"
        },
        "changes": {
          "type": "array",
          "items": {
            "$ref": "Changes"
          }
        }
      }
    },
    "Resource": {
      "id": "Resource",
      "properties": {
        "ethernetInterfaceDeltas": {
          "type": "array",
          "items": {
            "$ref": "EthernetInterfaceDeltas"
          }
        },
        "resourcePortDeltas": {
          "type": "array",
          "items": {
            "$ref": "ResourcePortDeltas"
          }
        }
      }
    },
    "UNIServiceDeltas": {
      "id": "UNIServiceDeltas",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "changes": {
          "type": "array",
          "items": {
            "$ref": "Changes"
          }
        },
        "uniServiceConfiguration": {
          "$ref": "UNIServiceConfiguration"
        }
      }
    },
    "Service": {
      "id": "Service",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "uniServiceDeltas": {
          "type": "array",
          "items": {
            "$ref": "UNIServiceDeltas"
          }
        },
        "changes": {
          "type": "array",
          "items": {
            "$ref": "Changes"
          }
        }
      }
    },
    "OrderDesign": {
      "id": "OrderDesign",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "status": {
          "type": "string"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "designArtifact": {
          "$ref": "Link"
        },
        "resourceDesign": {
          "$ref": "Resource"
        },
        "serviceDesign": {
          "$ref": "Service"
        }
      }
    },
    "Slot": {
      "id": "Slot",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        }
      }
    },
    "Characteristic": {
      "id": "Characteristic",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        }
      }
    },
    "Device": {
      "id": "Device",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "description": {
          "type": "String"
        },
        "name": {
          "type": "String"
        },
        "type": {
          "type": "String"
        },
        "version": {
          "type": "String"
        },
        "managementMethodCurrent": {
          "type": "number"
        },
        "managementMethodSupported": {
          "type": "number"
        },
        "usageState": {
          "type": "number"
        },
        "macAddress": {
          "type": "String"
        },
        "manufactureDateStamp": {
          "type": "date"
        },
        "otherIdentifier": {
          "type": "String"
        },
        "powerState": {
          "type": "number"
        },
        "serialNumber": {
          "type": "string"
        },
        "versionNumber": {
          "type": "string"
        },
        "validFor": {
          "$ref": "TimePeriod"
        },
        "hostName": {
          "type": "String"
        },
        "ownedBy": {
          "$ref": "Customer"
        },
        "characteristics": {
          "type": "array",
          "items": {
            "$ref": "Characteristic"
          }
        },
        "slot": {
          "$ref": "Slot"
        }
      }
    },
    "ResourceOrder": {
      "id": "ResourceOrder",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "description": {
          "type": "string"
        },
        "interactionDate": {
          "type": "string",
          "format": "date-time"
        },
        "interactionDateComplete": {
          "type": "string",
          "format": "date-time"
        },
        "interactionStatus": {
          "type": "string"
        },
        "device": {
          "$ref": "Device"
        },
        "orderDesign": {
          "$ref": "OrderDesign"
        }
      }
    },
    "AccountStatus": {
      "type": "string",
      "enum": [
        "Active",
        "Suspended",
        "Inactive",
        "Closed"
      ]
    },
    "BillCharge": { },
    "CableServiceArea": { },
    "Comment": { },
    "CustomerAccount": { },
    "CustomerBill": { },
    "CustomerBillSpec": { },
    "CustomerOrder": { },
    "CustomerOrderItem": { },
    "CustomerPayment": { },
    "Document": { },
    "EmailContact": { },
    "ExternalSystemReference": { },
    "FaxNumber": { },
    "GeographicAddress": { },
    "Individual": { },
    "Organization": { },
    "PaymentItem": { },
    "PaymentMethod": { },
    "PaymentPlan": { },
    "PostalContact": { },
    "Preference": { },
    "Product": { },
    "ProductOffering": { },
    "ProductPrice": { },
    "ProductProperties": { },
    "ProductRelationship": { },
    "ProductSpecification": { },
    "ServiceRole": { },
    "ServiceSpecification": { },
    "ServiceConfiguration": { },
    "SiteList": { },
    "StatusEntry": { },
    "SystemContact": { },
    "TelephoneNumber": { },
    "Ticket": { },
    "TicketLocation": { },
    "TicketCategory": { },
    "User": { },
    "UserSummary": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "link": {
          "type": "object",
          "$ref": "Link"
        },
        "contactRole": {
          "type": "string"
        },
        "accountRole": {
          "type": "string"
        },
        "profile": {
          "type": "object",
          "$ref": "PartySummary"
        }
      }
    },
    "UserCredential": { },
    "UserGroup": { }
  }
}
