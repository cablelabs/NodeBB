{
  "/statusentry": {
    "post": {
      "tags": ["StatusEntry"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/StatusEntry"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "/statusentry/{id}": {
    "get": {
      "tags": ["StatusEntry"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "Status Entry",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/StatusEntry"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["StatusEntry"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/StatusEntry"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/StatusEntry"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["StatusEntry"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "/contact": {
    "post": {
      "tags": ["Contact"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/Contact"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "/contact/{id}": {
    "get": {
      "tags": ["Contact"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "Contact ",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/Contact"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["Contact"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/Contact"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/Contact"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["Contact"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "//cmts": {
    "post": {
      "tags": ["CMTS"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/CMTS"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "//cmts/{id}": {
    "get": {
      "tags": ["CMTS"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "CM TS",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/CMTS"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["CMTS"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/CMTS"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/CMTS"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["CMTS"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "/sitelist": {
    "post": {
      "tags": ["SiteList"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/SiteList"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "/sitelist/{id}": {
    "get": {
      "tags": ["SiteList"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "Site List",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/SiteList"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["SiteList"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/SiteList"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/SiteList"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["SiteList"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "//ack": {
    "post": {
      "tags": ["ACK"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/ACK"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "//ack/{id}": {
    "get": {
      "tags": ["ACK"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "AC K",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/ACK"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["ACK"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/ACK"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/ACK"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["ACK"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "/productorder": {
    "post": {
      "tags": ["ProductOrder"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/ProductOrder"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "/productorder/{id}": {
    "get": {
      "tags": ["ProductOrder"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "Product Order",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/ProductOrder"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["ProductOrder"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/ProductOrder"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/ProductOrder"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["ProductOrder"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "/usercredential": {
    "post": {
      "tags": ["User Credential"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/User Credential"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "/usercredential/{id}": {
    "get": {
      "tags": ["User Credential"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "User  Credential",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/User Credential"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["User Credential"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/User Credential"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/User Credential"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["User Credential"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "//billcharge": {
    "post": {
      "tags": ["Bill Charge"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/Bill Charge"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "//billcharge/{id}": {
    "get": {
      "tags": ["Bill Charge"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "Bill  Charge",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/Bill Charge"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["Bill Charge"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/Bill Charge"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/Bill Charge"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["Bill Charge"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "/serviceorderitem": {
    "post": {
      "tags": ["Service Order Item"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/Service Order Item"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "/serviceorderitem/{id}": {
    "get": {
      "tags": ["Service Order Item"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "Service  Order Item",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/Service Order Item"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["Service Order Item"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/Service Order Item"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/Service Order Item"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["Service Order Item"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "/resource/resourceport": {
    "post": {
      "tags": ["ResourcePort"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/ResourcePort"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "/resource/resourceport/{id}": {
    "get": {
      "tags": ["ResourcePort"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "Resource Port",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/ResourcePort"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["ResourcePort"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/ResourcePort"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/ResourcePort"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["ResourcePort"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "/product/epl": {
    "post": {
      "tags": ["EPL Product"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/EPL Product"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "/product/epl/{id}": {
    "get": {
      "tags": ["EPL Product"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "EP L Product",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/EPL Product"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["EPL Product"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/EPL Product"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/EPL Product"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["EPL Product"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "/faxnumber": {
    "post": {
      "tags": ["FaxNumber"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/FaxNumber"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "/faxnumber/{id}": {
    "get": {
      "tags": ["FaxNumber"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "Fax Number",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/FaxNumber"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["FaxNumber"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/FaxNumber"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/FaxNumber"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["FaxNumber"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "/productorder/case3_final/productorderitem": {
    "post": {
      "tags": ["ProductOrderItem"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/ProductOrderItem"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "/productorder/case3_final/productorderitem/{id}": {
    "get": {
      "tags": ["ProductOrderItem"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "Product OrderItem",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/ProductOrderItem"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["ProductOrderItem"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/ProductOrderItem"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/ProductOrderItem"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["ProductOrderItem"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "/customerbillspec": {
    "post": {
      "tags": ["CustomerBillSpec"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/CustomerBillSpec"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "/customerbillspec/{id}": {
    "get": {
      "tags": ["CustomerBillSpec"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "Customer BillSpec",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/CustomerBillSpec"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["CustomerBillSpec"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/CustomerBillSpec"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/CustomerBillSpec"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["CustomerBillSpec"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "/ticket/1": {
    "post": {
      "tags": ["Ticket Watchers"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/Ticket Watchers"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "/ticket/1/{id}": {
    "get": {
      "tags": ["Ticket Watchers"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "Ticket  Watchers",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/Ticket Watchers"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["Ticket Watchers"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/Ticket Watchers"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/Ticket Watchers"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["Ticket Watchers"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "/service": {
    "post": {
      "tags": ["Service"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/Service"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "/service/{id}": {
    "get": {
      "tags": ["Service"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "Service ",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/Service"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["Service"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/Service"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/Service"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["Service"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "/ticket/1": {
    "post": {
      "tags": ["Ticket Modifier"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/Ticket Modifier"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "/ticket/1/{id}": {
    "get": {
      "tags": ["Ticket Modifier"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "Ticket  Modifier",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/Ticket Modifier"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["Ticket Modifier"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/Ticket Modifier"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/Ticket Modifier"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["Ticket Modifier"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "//resourceorder": {
    "post": {
      "tags": ["ResourceOrder"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/ResourceOrder"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "//resourceorder/{id}": {
    "get": {
      "tags": ["ResourceOrder"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "Resource Order",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/ResourceOrder"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["ResourceOrder"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/ResourceOrder"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/ResourceOrder"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["ResourceOrder"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "//paymentitem": {
    "post": {
      "tags": ["PaymentItem"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/PaymentItem"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "//paymentitem/{id}": {
    "get": {
      "tags": ["PaymentItem"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "Payment Item",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/PaymentItem"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["PaymentItem"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/PaymentItem"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/PaymentItem"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["PaymentItem"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "/document": {
    "post": {
      "tags": ["Document"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/Document"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "/document/{id}": {
    "get": {
      "tags": ["Document"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "Document ",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/Document"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["Document"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/Document"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/Document"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["Document"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "/preference": {
    "post": {
      "tags": ["Preference"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/Preference"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "/preference/{id}": {
    "get": {
      "tags": ["Preference"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "Preference ",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/Preference"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["Preference"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/Preference"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/Preference"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["Preference"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "/ticket/1": {
    "post": {
      "tags": ["Ticket Assignee"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/Ticket Assignee"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "/ticket/1/{id}": {
    "get": {
      "tags": ["Ticket Assignee"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "Ticket  Assignee",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/Ticket Assignee"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["Ticket Assignee"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/Ticket Assignee"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/Ticket Assignee"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["Ticket Assignee"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "/servicespecification": {
    "post": {
      "tags": ["Service Specification"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/Service Specification"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "/servicespecification/{id}": {
    "get": {
      "tags": ["Service Specification"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "Service  Specification",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/Service Specification"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["Service Specification"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/Service Specification"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/Service Specification"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["Service Specification"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "/resource/card": {
    "post": {
      "tags": ["Card"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/Card"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "/resource/card/{id}": {
    "get": {
      "tags": ["Card"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "Card ",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/Card"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["Card"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/Card"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/Card"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["Card"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "/orderdesign": {
    "post": {
      "tags": ["OrderDesign"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/OrderDesign"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "/orderdesign/{id}": {
    "get": {
      "tags": ["OrderDesign"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "Order Design",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/OrderDesign"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["OrderDesign"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/OrderDesign"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/OrderDesign"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["OrderDesign"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "/ticket": {
    "post": {
      "tags": ["Ticket"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/Ticket"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "/ticket/{id}": {
    "get": {
      "tags": ["Ticket"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "Ticket ",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/Ticket"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["Ticket"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/Ticket"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/Ticket"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["Ticket"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "/paymentmethod": {
    "post": {
      "tags": ["PaymentMethod"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/PaymentMethod"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "/paymentmethod/{id}": {
    "get": {
      "tags": ["PaymentMethod"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "Payment Method",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/PaymentMethod"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["PaymentMethod"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/PaymentMethod"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/PaymentMethod"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["PaymentMethod"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "/customer": {
    "post": {
      "tags": ["Customer"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/Customer"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "/customer/{id}": {
    "get": {
      "tags": ["Customer"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "Customer ",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/Customer"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["Customer"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/Customer"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/Customer"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["Customer"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "/servicerole": {
    "post": {
      "tags": ["ServiceRole"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/ServiceRole"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "/servicerole/{id}": {
    "get": {
      "tags": ["ServiceRole"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "Service Role",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/ServiceRole"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["ServiceRole"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/ServiceRole"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/ServiceRole"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["ServiceRole"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "/service/evc": {
    "post": {
      "tags": ["EVC Service"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/EVC Service"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "/service/evc/{id}": {
    "get": {
      "tags": ["EVC Service"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "EV C Service",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/EVC Service"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["EVC Service"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/EVC Service"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/EVC Service"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["EVC Service"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "/ticketcategory": {
    "post": {
      "tags": ["TicketCategory"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/TicketCategory"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "/ticketcategory/{id}": {
    "get": {
      "tags": ["TicketCategory"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "Ticket Category",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/TicketCategory"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["TicketCategory"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/TicketCategory"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/TicketCategory"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["TicketCategory"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "/ticket/1": {
    "post": {
      "tags": ["Ticket ImpactedItems"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/Ticket ImpactedItems"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "/ticket/1/{id}": {
    "get": {
      "tags": ["Ticket ImpactedItems"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "Ticket  ImpactedItems",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/Ticket ImpactedItems"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["Ticket ImpactedItems"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/Ticket ImpactedItems"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/Ticket ImpactedItems"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["Ticket ImpactedItems"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "//cablemodem": {
    "post": {
      "tags": ["CableModem"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/CableModem"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "//cablemodem/{id}": {
    "get": {
      "tags": ["CableModem"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "Cable Modem",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/CableModem"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["CableModem"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/CableModem"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/CableModem"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["CableModem"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "/productspecification": {
    "post": {
      "tags": ["Product Specification"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/Product Specification"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "/productspecification/{id}": {
    "get": {
      "tags": ["Product Specification"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "Product  Specification",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/Product Specification"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["Product Specification"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/Product Specification"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/Product Specification"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["Product Specification"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "/externalsystemreference": {
    "post": {
      "tags": ["ExternalSystemReference"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/ExternalSystemReference"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "/externalsystemreference/{id}": {
    "get": {
      "tags": ["ExternalSystemReference"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "External SystemReference",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/ExternalSystemReference"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["ExternalSystemReference"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/ExternalSystemReference"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/ExternalSystemReference"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["ExternalSystemReference"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "/featurecollection": {
    "post": {
      "tags": ["FeatureCollection"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/FeatureCollection"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "/featurecollection/{id}": {
    "get": {
      "tags": ["FeatureCollection"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "Feature Collection",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/FeatureCollection"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["FeatureCollection"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/FeatureCollection"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/FeatureCollection"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["FeatureCollection"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "/user": {
    "post": {
      "tags": ["User"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/User"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "/user/{id}": {
    "get": {
      "tags": ["User"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "User ",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/User"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["User"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/User"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/User"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["User"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "/usergroup": {
    "post": {
      "tags": ["UserGroup"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/UserGroup"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "/usergroup/{id}": {
    "get": {
      "tags": ["UserGroup"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "User Group",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/UserGroup"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["UserGroup"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/UserGroup"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/UserGroup"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["UserGroup"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "/individual": {
    "post": {
      "tags": ["Individual"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/Individual"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "/individual/{id}": {
    "get": {
      "tags": ["Individual"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "Individual ",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/Individual"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["Individual"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/Individual"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/Individual"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["Individual"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "/organization": {
    "post": {
      "tags": ["Organization"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/Organization"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "/organization/{id}": {
    "get": {
      "tags": ["Organization"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "Organization ",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/Organization"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["Organization"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/Organization"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/Organization"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["Organization"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "/postalcontact": {
    "post": {
      "tags": ["PostalContact"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/PostalContact"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "/postalcontact/{id}": {
    "get": {
      "tags": ["PostalContact"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "Postal Contact",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/PostalContact"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["PostalContact"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/PostalContact"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/PostalContact"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["PostalContact"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "/device": {
    "post": {
      "tags": ["Device"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/Device"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "/device/{id}": {
    "get": {
      "tags": ["Device"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "Device ",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/Device"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["Device"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/Device"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/Device"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["Device"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "/product/evc": {
    "post": {
      "tags": ["EVC Product"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/EVC Product"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "/product/evc/{id}": {
    "get": {
      "tags": ["EVC Product"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "EV C Product",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/EVC Product"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["EVC Product"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/EVC Product"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/EVC Product"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["EVC Product"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "/product/uni": {
    "post": {
      "tags": ["UNI Product"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/UNI Product"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "/product/uni/{id}": {
    "get": {
      "tags": ["UNI Product"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "UN I Product",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/UNI Product"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["UNI Product"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/UNI Product"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/UNI Product"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["UNI Product"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "/site": {
    "post": {
      "tags": ["Site"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/Site"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "/site/{id}": {
    "get": {
      "tags": ["Site"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "Site ",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/Site"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["Site"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/Site"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/Site"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["Site"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "/customerorder": {
    "post": {
      "tags": ["CustomerOrder"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/CustomerOrder"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "/customerorder/{id}": {
    "get": {
      "tags": ["CustomerOrder"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "Customer Order",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/CustomerOrder"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["CustomerOrder"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/CustomerOrder"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/CustomerOrder"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["CustomerOrder"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "//account": {
    "post": {
      "tags": ["Account"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/Account"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "//account/{id}": {
    "get": {
      "tags": ["Account"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "Account ",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/Account"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["Account"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/Account"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/Account"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["Account"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "/productconfiguration": {
    "post": {
      "tags": ["ProductConfiguration"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/ProductConfiguration"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "/productconfiguration/{id}": {
    "get": {
      "tags": ["ProductConfiguration"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "Product Configuration",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/ProductConfiguration"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["ProductConfiguration"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/ProductConfiguration"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/ProductConfiguration"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["ProductConfiguration"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "/service/uniconfiguration": {
    "post": {
      "tags": ["UNI ServiceConfiguration"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/UNI ServiceConfiguration"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "/service/uniconfiguration/{id}": {
    "get": {
      "tags": ["UNI ServiceConfiguration"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "UN I ServiceConfiguration",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/UNI ServiceConfiguration"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["UNI ServiceConfiguration"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/UNI ServiceConfiguration"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/UNI ServiceConfiguration"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["UNI ServiceConfiguration"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "/ticket/1": {
    "post": {
      "tags": ["Ticket Submitter"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/Ticket Submitter"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "/ticket/1/{id}": {
    "get": {
      "tags": ["Ticket Submitter"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "Ticket  Submitter",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/Ticket Submitter"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["Ticket Submitter"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/Ticket Submitter"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/Ticket Submitter"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["Ticket Submitter"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "/user/1": {
    "post": {
      "tags": ["Users Tickets"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/Users Tickets"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "/user/1/{id}": {
    "get": {
      "tags": ["Users Tickets"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "Users  Tickets",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/Users Tickets"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["Users Tickets"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/Users Tickets"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/Users Tickets"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["Users Tickets"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "/service/evcconfiguration": {
    "post": {
      "tags": ["EVC Service Configuration"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/EVC Service Configuration"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "/service/evcconfiguration/{id}": {
    "get": {
      "tags": ["EVC Service Configuration"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "EV C Service Configuration",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/EVC Service Configuration"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["EVC Service Configuration"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/EVC Service Configuration"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/EVC Service Configuration"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["EVC Service Configuration"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "/ticket": {
    "post": {
      "tags": ["Ticket in DB"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/Ticket in DB"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "/ticket/{id}": {
    "get": {
      "tags": ["Ticket in DB"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "Ticket  in DB",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/Ticket in DB"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["Ticket in DB"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/Ticket in DB"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/Ticket in DB"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["Ticket in DB"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "/ticket/1": {
    "post": {
      "tags": ["Ticket AssignedGroup"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/Ticket AssignedGroup"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "/ticket/1/{id}": {
    "get": {
      "tags": ["Ticket AssignedGroup"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "Ticket  AssignedGroup",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/Ticket AssignedGroup"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["Ticket AssignedGroup"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/Ticket AssignedGroup"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/Ticket AssignedGroup"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["Ticket AssignedGroup"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "/propertyaddress": {
    "post": {
      "tags": ["PropertyAddress"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/PropertyAddress"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "/propertyaddress/{id}": {
    "get": {
      "tags": ["PropertyAddress"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "Property Address",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/PropertyAddress"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["PropertyAddress"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/PropertyAddress"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/PropertyAddress"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["PropertyAddress"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "/product/eplconfiguration": {
    "post": {
      "tags": ["EPL Product Configuration"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/EPL Product Configuration"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "/product/eplconfiguration/{id}": {
    "get": {
      "tags": ["EPL Product Configuration"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "EP L Product Configuration",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/EPL Product Configuration"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["EPL Product Configuration"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/EPL Product Configuration"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/EPL Product Configuration"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["EPL Product Configuration"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "/productprice": {
    "post": {
      "tags": ["ProductPrice"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/ProductPrice"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "/productprice/{id}": {
    "get": {
      "tags": ["ProductPrice"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "Product Price",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/ProductPrice"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["ProductPrice"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/ProductPrice"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/ProductPrice"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["ProductPrice"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "/customerquoteitem": {
    "post": {
      "tags": ["CustomerQuoteItem"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/CustomerQuoteItem"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "/customerquoteitem/{id}": {
    "get": {
      "tags": ["CustomerQuoteItem"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "Customer QuoteItem",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/CustomerQuoteItem"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["CustomerQuoteItem"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/CustomerQuoteItem"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/CustomerQuoteItem"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["CustomerQuoteItem"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "/geographicaddress": {
    "post": {
      "tags": ["Geographic Address"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/Geographic Address"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "/geographicaddress/{id}": {
    "get": {
      "tags": ["Geographic Address"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "Geographic  Address",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/Geographic Address"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["Geographic Address"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/Geographic Address"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/Geographic Address"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["Geographic Address"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "/property": {
    "post": {
      "tags": ["Property"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/Property"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "/property/{id}": {
    "get": {
      "tags": ["Property"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "Property ",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/Property"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["Property"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/Property"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/Property"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["Property"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "/configurationdata": {
    "post": {
      "tags": ["ConfigurationData"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/ConfigurationData"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "/configurationdata/{id}": {
    "get": {
      "tags": ["ConfigurationData"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "Configuration Data",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/ConfigurationData"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["ConfigurationData"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/ConfigurationData"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/ConfigurationData"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["ConfigurationData"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "/feature": {
    "post": {
      "tags": ["Feature"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/Feature"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "/feature/{id}": {
    "get": {
      "tags": ["Feature"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "Feature ",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/Feature"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["Feature"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/Feature"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/Feature"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["Feature"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "/service/uni": {
    "post": {
      "tags": ["UNI Service"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/UNI Service"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "/service/uni/{id}": {
    "get": {
      "tags": ["UNI Service"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "UN I Service",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/UNI Service"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["UNI Service"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/UNI Service"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/UNI Service"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["UNI Service"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "//asbuiltorderdesign": {
    "post": {
      "tags": ["As Built Design"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/As Built Design"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "//asbuiltorderdesign/{id}": {
    "get": {
      "tags": ["As Built Design"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "As  Built Design",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/As Built Design"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["As Built Design"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/As Built Design"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/As Built Design"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["As Built Design"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "/customerorderitem": {
    "post": {
      "tags": ["CustomerOrderItem"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/CustomerOrderItem"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "/customerorderitem/{id}": {
    "get": {
      "tags": ["CustomerOrderItem"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "Customer OrderItem",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/CustomerOrderItem"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["CustomerOrderItem"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/CustomerOrderItem"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/CustomerOrderItem"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["CustomerOrderItem"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "/paymentplan": {
    "post": {
      "tags": ["PaymentPlan"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/PaymentPlan"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "/paymentplan/{id}": {
    "get": {
      "tags": ["PaymentPlan"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "Payment Plan",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/PaymentPlan"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["PaymentPlan"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/PaymentPlan"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/PaymentPlan"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["PaymentPlan"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "/systemcontact": {
    "post": {
      "tags": ["System Contact"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/System Contact"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "/systemcontact/{id}": {
    "get": {
      "tags": ["System Contact"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "System  Contact",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/System Contact"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["System Contact"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/System Contact"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/System Contact"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["System Contact"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "/telephonenumber": {
    "post": {
      "tags": ["Telephone Number"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/Telephone Number"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "/telephonenumber/{id}": {
    "get": {
      "tags": ["Telephone Number"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "Telephone  Number",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/Telephone Number"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["Telephone Number"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/Telephone Number"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/Telephone Number"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["Telephone Number"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "/serviceorder": {
    "post": {
      "tags": ["Service Order"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/Service Order"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "/serviceorder/{id}": {
    "get": {
      "tags": ["Service Order"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "Service  Order",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/Service Order"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["Service Order"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/Service Order"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/Service Order"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["Service Order"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "/serviceorder/sat": {
    "post": {
      "tags": ["SAT"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/SAT"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "/serviceorder/sat/{id}": {
    "get": {
      "tags": ["SAT"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "SA T",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/SAT"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["SAT"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/SAT"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/SAT"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["SAT"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "/product": {
    "post": {
      "tags": ["Product"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/Product"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "/product/{id}": {
    "get": {
      "tags": ["Product"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "Product ",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/Product"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["Product"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/Product"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/Product"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["Product"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "/comment": {
    "post": {
      "tags": ["Comment"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/Comment"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "/comment/{id}": {
    "get": {
      "tags": ["Comment"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "Comment ",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/Comment"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["Comment"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/Comment"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/Comment"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["Comment"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "/customerpayment": {
    "post": {
      "tags": ["CustomerPayment"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/CustomerPayment"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "/customerpayment/{id}": {
    "get": {
      "tags": ["CustomerPayment"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "Customer Payment",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/CustomerPayment"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["CustomerPayment"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/CustomerPayment"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/CustomerPayment"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["CustomerPayment"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "/customerquote": {
    "post": {
      "tags": ["CustomerQuote"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/CustomerQuote"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "/customerquote/{id}": {
    "get": {
      "tags": ["CustomerQuote"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "Customer Quote",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/CustomerQuote"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["CustomerQuote"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/CustomerQuote"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/CustomerQuote"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["CustomerQuote"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "/productoffering": {
    "post": {
      "tags": ["ProductOffering"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/ProductOffering"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "/productoffering/{id}": {
    "get": {
      "tags": ["ProductOffering"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "Product Offering",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/ProductOffering"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["ProductOffering"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/ProductOffering"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/ProductOffering"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["ProductOffering"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "/ticketlocation": {
    "post": {
      "tags": ["TicketLocation"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/TicketLocation"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "/ticketlocation/{id}": {
    "get": {
      "tags": ["TicketLocation"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "Ticket Location",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/TicketLocation"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["TicketLocation"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/TicketLocation"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/TicketLocation"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["TicketLocation"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "/serviceconfiguration": {
    "post": {
      "tags": ["ServiceConfiguration"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/ServiceConfiguration"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "/serviceconfiguration/{id}": {
    "get": {
      "tags": ["ServiceConfiguration"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "Service Configuration",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/ServiceConfiguration"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["ServiceConfiguration"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/ServiceConfiguration"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/ServiceConfiguration"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["ServiceConfiguration"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "/cableservicearea": {
    "post": {
      "tags": ["CableServiceArea"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/CableServiceArea"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "/cableservicearea/{id}": {
    "get": {
      "tags": ["CableServiceArea"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "Cable ServiceArea",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/CableServiceArea"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["CableServiceArea"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/CableServiceArea"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/CableServiceArea"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["CableServiceArea"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "/customerbill": {
    "post": {
      "tags": ["CustomerBill"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/CustomerBill"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "/customerbill/{id}": {
    "get": {
      "tags": ["CustomerBill"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "Customer Bill",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/CustomerBill"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["CustomerBill"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/CustomerBill"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/CustomerBill"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["CustomerBill"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "/resource/ethernetinterface": {
    "post": {
      "tags": ["EthernetInterface"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/EthernetInterface"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "/resource/ethernetinterface/{id}": {
    "get": {
      "tags": ["EthernetInterface"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "Ethernet Interface",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/EthernetInterface"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["EthernetInterface"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/EthernetInterface"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/EthernetInterface"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["EthernetInterface"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  },
  "/emailcontact": {
    "post": {
      "tags": ["Email Contact"],
      "summary": "Create a new resource",
      "description": "Create a new instance of the resource.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "",
          "required": true,
          "schema": {"$ref": "#/definitions/Email Contact"}
        }
      ],
      "responses": {
        "201": {"description": "Instance Created"},
        "405": {"description": "Invalid input"}
      }
    }
  },
  ,
  "/emailcontact/{id}": {
    "get": {
      "tags": ["Email Contact"],
      "summary": "Find resource by ID",
      "description": "Retrieves an instance based on the ID",
      "displayName": "Email  Contact",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "ID of instance that needs to be fetched",
          "required": true,
          "type": "integer",
          "format": "int64"
        },
        {
          "in": "query",
          "name": "view",
          "description": "View of the resource that you want to get.",
          "required": false,
          "type": "string"
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/Email Contact"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"}
      }
    },
    "put": {
      "tags": ["Email Contact"],
      "summary": "Update an existing resource",
      "description": "Update a specific instance of the resource by ID.",
      "consumes": [
        "application/json",
        "application/xml"
      ],
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Instance object that needs to be updated.",
          "required": true,
          "schema": {"$ref": "#/definitions/Email Contact"}
        }
      ],
      "responses": {
        "200": {
          "description": "successful operation",
          "schema": {"$ref": "#/definitions/Email Contact"}
        },
        "400": {"description": "Invalid ID supplied"},
        "404": {"description": "Pet not found"},
        "405": {"description": "Validation exception"}
      }
    },
    "delete": {
      "tags": ["Email Contact"],
      "summary": "Deletes an resource based on ID.",
      "description": "Delete a specific instance based on the ID",
      "produces": [
        "application/json",
        "application/xml"
      ],
      "parameters": [
        {
          "in": "path",
          "name": "id",
          "description": "Instance id to be deleted",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "responses": {
        "204": {"description": "Successfully Deleted."},
        "400": {"description": "Invalid pet value"}
      }
    }
  }
}