{
  "swagger": "2.0",
  "info": {
    "description": "Exlpore the cable API's. API's are grouped by Domain.",
    "version": "0.0.1",
    "title": "Cable API"
  },
  "host": "cable-api.herokuapp.com",
  "basePath": "/api-docs",
  "paths": {
    "/statusentry/{id}": {
      "get": {
        "tags": [
          "Interaction"
        ],
        "summary": "Find resource by ID",
        "description": "An entry that documents the Lifecycle of a given Incident TicketAn entry that documents the Lifecycle of a given Incident Ticket.",
        "displayName": "Status Entry",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/StatusEntry"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Interaction"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StatusEntry"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/StatusEntry"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Interaction"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/statusentry": {
      "post": {
        "tags": [
          "Interaction"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StatusEntry"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/contact": {
      "post": {
        "tags": [
          "Common"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Contact"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/contact/{id}": {
      "get": {
        "tags": [
          "Common"
        ],
        "summary": "Find resource by ID",
        "description": "A PartyRole for a Party that has a specific Contact role (e.g., Billing Contact)",
        "displayName": "Contact ",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Contact"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Common"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Contact"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Contact"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Common"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/cmts": {
      "post": {
        "tags": [
          "Resource"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CMTS"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/cmts/{id}": {
      "get": {
        "tags": [
          "Resource"
        ],
        "summary": "Find resource by ID",
        "description": "Cable Modem Termination System.  Device that CableModems 'talk' to via Channels.",
        "displayName": "CMTS",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CMTS"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Resource"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CMTS"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CMTS"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Resource"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/sitelist": {
      "post": {
        "tags": [
          "Location"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SiteList"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/sitelist/{id}": {
      "get": {
        "tags": [
          "Location"
        ],
        "summary": "Find resource by ID",
        "description": "A collection of Site instances.",
        "displayName": "Site List",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SiteList"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Location"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SiteList"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SiteList"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Location"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/ack": {
      "post": {
        "tags": [
          "UnSuported"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ACK"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ack/{id}": {
      "get": {
        "tags": [
          "UnSuported"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "ACK",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ACK"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "UnSuported"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ACK"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ACK"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "UnSuported"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/productorder": {
      "post": {
        "tags": [
          "Interaction"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductOrder"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/productorder/{id}": {
      "get": {
        "tags": [
          "Interaction"
        ],
        "summary": "Find resource by ID",
        "description": "A type of order that is not governed by any industry committee. Product Orders represent orders that would typically originate at an end user. Product Orders may spawn ASRs, LSRs, or other PSRs in order to fill the end users request, if facility, equipment, or plant assignments are not available for designing the requested Product.",
        "displayName": "Product Order",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ProductOrder"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Interaction"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductOrder"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ProductOrder"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Interaction"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/usercredential": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserCredential"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/usercredential/{id}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Find resource by ID",
        "description": "A combination of user ID and password that is used to authenticate a user for access to provider services or account management.",
        "displayName": "User  Credential",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UserCredential"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserCredential"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UserCredential"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Customer"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/billcharge": {
      "post": {
        "tags": [
          "Interaction"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BillCharge"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/billcharge/{id}": {
      "get": {
        "tags": [
          "Interaction"
        ],
        "summary": "Find resource by ID",
        "description": "A charge or a credit assigned to the customer's account in the course or for the purpose of the billing process. Subclasses further define these elements.",
        "displayName": "Bill  Charge",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/BillCharge"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Interaction"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Bill Charge"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Bill Charge"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Interaction"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/serviceorderitem": {
      "post": {
        "tags": [
          "Interaction"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Service Order Item"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/serviceorderitem/{id}": {
      "get": {
        "tags": [
          "Interaction"
        ],
        "summary": "Find resource by ID",
        "description": "The purpose for the ServiceOrder expressed in terms of a ServiceSpecification or a Service.",
        "displayName": "Service  Order Item",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Service Order Item"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Interaction"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Service Order Item"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Service Order Item"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Interaction"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/resource/resourceport": {
      "post": {
        "tags": [
          "Resource"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResourcePort"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/resource/resourceport/{id}": {
      "get": {
        "tags": [
          "Resource"
        ],
        "summary": "Find resource by ID",
        "description": "The ResourcePort is a type of ResourceElement that consists only of logical termination points (TrailTerminationPointSource, TrailTerminationPointSink, and TrailTerminationPointBiDirectional, to be precise) and PhysicalPorts. This enables the ResourcePort to take on the physical and logical characteristics of a 'port' as defined in G.805. ",
        "displayName": "Resource Port",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResourcePort"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Resource"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResourcePort"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResourcePort"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Resource"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/product/epl": {
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EPLProduct"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/product/epl/{id}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Find resource by ID",
        "description": "A ProductOffering procured by a Customer, or other interested Party playing a PartyRole, appearing as a BusinessInteractionItem, which could take the form of a Agreement. ProductSpecificationCharacteristic(s) in part define the Product. A Product is realized as one or more Service(s) and/or Resource(s).",
        "displayName": "EPL Product",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/EPLProduct"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Product"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EPL Product"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/EPL Product"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Product"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/faxnumber": {
      "post": {
        "tags": [
          "Common"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FaxNumber"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/faxnumber/{id}": {
      "get": {
        "tags": [
          "Common"
        ],
        "summary": "Find resource by ID",
        "description": "Fax (short for facsimile), sometimes called telecopying or telefax, is the telephonic transmission of scanned printed material (both text and images), normally to a telephone number connected to a printer or other output device.",
        "displayName": "Fax Number",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/FaxNumber"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Common"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FaxNumber"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/FaxNumber"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Common"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/productorder/{id}/productorderitem": {
      "post": {
        "tags": [
          "Interaction"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of the Product Order instance",
            "required": true,
            "default": "case3_final",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductOrderItem"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/productorder/{po-id}/productorderitem/{id}": {
      "get": {
        "tags": [
          "Interaction"
        ],
        "summary": "Find resource by ID",
        "description": "The purpose for the Customer Order expressed in terms of a Product Offering or a Product (for a change order) inherited from BusinessInteractionItem.",
        "displayName": "Product OrderItem",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "po-id",
            "description": "ID of the Product Order instance",
            "required": true,
            "default": "case3_final",
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ProductOrderItem"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Interaction"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "po-id",
            "description": "ID of the Product Order instance",
            "required": true,
            "default": "case3_final",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductOrderItem"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ProductOrderItem"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Interaction"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "po-id",
            "description": "ID of the Product Order instance",
            "required": true,
            "default": "case3_final",
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/customerbillspec": {
      "post": {
        "tags": [
          "Interaction"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerBillSpec"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/customerbillspec/{id}": {
      "get": {
        "tags": [
          "Interaction"
        ],
        "summary": "Find resource by ID",
        "description": "A detailed description of a customer's bill structure. The current version of this class is serving as a placeholder. It will be further developed in the next version of this document.",
        "displayName": "Customer BillSpec",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CustomerBillSpec"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Interaction"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerBillSpec"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CustomerBillSpec"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Interaction"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/ticket/{id}/assignedgroup": {
      "post": {
        "tags": [
          "Interaction"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of the ticket",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TicketAssignedGroup"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      },
      "get": {
        "tags": [
          "Interaction"
        ],
        "summary": "Find resource by ID",
        "description": "A group assigned to a BusinessInteraction. For example, an IncidentTicket assigned to a particular organization (e.g., Network Services).",
        "displayName": "Ticket  AssignedGroup",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of the ticket",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TicketAssignedGroup"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Interaction"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Ticket AssignedGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Ticket AssignedGroup"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Interaction"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/service": {
      "post": {
        "tags": [
          "Service"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Service"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/service/{id}": {
      "get": {
        "tags": [
          "Service"
        ],
        "summary": "Find resource by ID",
        "description": "All Services are characterized as either being possibly visible and usable by a Customer or not. This gives rise to the two subclasses of Service: CustomerFacingService and ResourceFacingService.",
        "displayName": "Service ",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Service"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Service"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Service"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Service"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Service"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/resourceorder": {
      "post": {
        "tags": [
          "Interaction"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResourceOrder"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/resourceorder/{id}": {
      "get": {
        "tags": [
          "Interaction"
        ],
        "summary": "Find resource by ID",
        "description": "A type of Request that represents a Service Order's services decomposed into the resources on which the services will be provisioned.",
        "displayName": "Resource Order",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResourceOrder"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Interaction"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResourceOrder"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResourceOrder"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Interaction"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/paymentitem": {
      "post": {
        "tags": [
          "Interaction"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PaymentItem"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/paymentitem/{id}": {
      "get": {
        "tags": [
          "Interaction"
        ],
        "summary": "Find resource by ID",
        "description": "PaymentItem is the application of CustomerPayment. PaymentItem is applied to CustomerBillInvoice, AppliedCustomerBillingRate.",
        "displayName": "Payment Item",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PaymentItem"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Interaction"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PaymentItem"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PaymentItem"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Interaction"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/document": {
      "post": {
        "tags": [
          "Interaction"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/document/{id}": {
      "get": {
        "tags": [
          "Interaction"
        ],
        "summary": "Find resource by ID",
        "description": "A reference to a physical document such as a contract, manual or email.",
        "displayName": "Document ",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Interaction"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Document"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Document"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Interaction"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/preference": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Preference"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/preference/{id}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Find resource by ID",
        "description": "A Preference refers to a particular area of control, such as Parental Restriction or Email Marketing, for a particular PartyRole, Resource, CustomerAccount, or Service.",
        "displayName": "Preference ",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Preference"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Preference"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Preference"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Customer"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/servicespecification": {
      "post": {
        "tags": [
          "Service"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Service Specification"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/servicespecification/{id}": {
      "get": {
        "tags": [
          "Service"
        ],
        "summary": "Find resource by ID",
        "description": "A ServiceSpecification defines the invariant characteristics of a Service. It can be conceptually thought of as a template that different Service instances can be instantiated from.",
        "displayName": "Service  Specification",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Service Specification"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Service"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Service Specification"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Service Specification"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Service"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/resource/card": {
      "post": {
        "tags": [
          "Resource"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Card"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/resource/card/{id}": {
      "get": {
        "tags": [
          "Resource"
        ],
        "summary": "Find resource by ID",
        "description": "This class represents a type of physical container that can be plugged into a Slot. It may represent a primary function (e.g., a networking card) or an auxiliary function (e.g., a memory card) that supports another card. All objects of this type are capable of carrying electrical and/or optical signals. They also provide a mounting point for other types of ManagedePhysicalElements, such as Chips or Cards.",
        "displayName": "Card ",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Card"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Resource"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Card"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Card"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Resource"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/orderdesign": {
      "post": {
        "tags": [
          "Interaction"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OrderDesign"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/orderdesign/{id}": {
      "get": {
        "tags": [
          "Interaction"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "Order Design",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/OrderDesign"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Interaction"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OrderDesign"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/OrderDesign"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Interaction"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/ticket": {
      "post": {
        "tags": [
          "Interaction"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Ticket in DB"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ticket/{id}": {
      "get": {
        "tags": [
          "Interaction"
        ],
        "summary": "Find resource by ID",
        "description": "A record containing the details of an Incident. Each Ticket documents the lifecycle of a single incident.",
        "displayName": "Ticket  in DB",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Ticket in DB"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Interaction"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Ticket in DB"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Ticket in DB"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Interaction"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/paymentmethod": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PaymentMethod"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/paymentmethod/{id}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Find resource by ID",
        "description": "PaymentMethod is the way in which customer provides payment, for example cash ,credit,transfer.",
        "displayName": "Payment Method",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PaymentMethod"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PaymentMethod"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PaymentMethod"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Customer"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/customer": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/customer/{id}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Find resource by ID",
        "description": "A person or organization that buys products and services from the enterprise or receives free offers or services. This is modeled as a Party playing the role of Customer. A Customer is a type of PartyRole. Customers can also be other service providers who resell the enterprises products, other service providers that lease the enterprise's resources for utilization by the other service provider's products and services, and so forth.",
        "displayName": "Customer ",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Customer"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/servicerole": {
      "post": {
        "tags": [
          "Interaction"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceRole"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/servicerole/{id}": {
      "get": {
        "tags": [
          "Interaction"
        ],
        "summary": "Find resource by ID",
        "description": "This is an abstract base class that defines a Service in terms of a set of roles. The roles are then used to characterize the functionality of the Service, regardless of whether it is a resource- or a customer-facing service.",
        "displayName": "Service Role",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ServiceRole"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Interaction"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceRole"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ServiceRole"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Interaction"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/service/evc": {
      "post": {
        "tags": [
          "Service"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EVCService"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/service/evc/{id}": {
      "get": {
        "tags": [
          "Service"
        ],
        "summary": "Find resource by ID",
        "description": "An association of two or more UNIs (The physical point in a 'network' that defines the demarcation between the responsibility of a Service Provider and the responsibility of a Subscriber) across one or more Metro Ethernet Networks.",
        "displayName": "EVC Service",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/EVC Service"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Service"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EVCService"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/EVC Service"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Service"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/ticketcategory": {
      "post": {
        "tags": [
          "Interaction"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TicketCategory"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ticketcategory/{id}": {
      "get": {
        "tags": [
          "Interaction"
        ],
        "summary": "Find resource by ID",
        "description": "A category of BusinessInteraction.",
        "displayName": "Ticket Category",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TicketCategory"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Interaction"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TicketCategory"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TicketCategory"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Interaction"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/cablemodem": {
      "post": {
        "tags": [
          "Resource"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CableModem"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/cablemodem/{id}": {
      "get": {
        "tags": [
          "Resource"
        ],
        "summary": "Find resource by ID",
        "description": "A cable modem is a type of network device that provides bi-directional data communication via radio frequency channels on a hybrid fibre-coaxial (HFC) and RFoG infrastructure. Cable modems are primarily used to deliver broadband Internet access in the form of cable Internet, taking advantage of the high bandwidth of a HFC and RFoG network.",
        "displayName": "Cable Modem",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CableModem"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Resource"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CableModem"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CableModem"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Resource"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/productspecification": {
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Create a new resource",
        "description": "A detailed description of a tangible or intangible object made available externally in the form of a ProductOffering to Customers or other Parties playing a PartyRole. A ProductSpecification may consist of other ProductSpecifications supplied together as a collection. Members of the collection may be offered in their own right. ProductSpecifications may also exist within groupings, such as ProductCategories, ProductLines, and ProductTypes.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductSpecification"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/productspecification/{id}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Find resource by ID",
        "description": "A detailed description of a tangible or intangible object made available externally in the form of a ProductOffering to Customers or other Parties playing a PartyRole. A ProductSpecification may consist of other ProductSpecifications supplied together as a collection. Members of the collection may be offered in their own right. ProductSpecifications may also exist within groupings, such as ProductCategories, ProductLines, and ProductTypes.",
        "displayName": "Product  Specification",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ProductSpecification"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Product"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductSpecification"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ProductSpecification"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Product"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/externalsystemreference": {
      "post": {
        "tags": [
          "UnSuported"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExternalSystemReference"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/externalsystemreference/{id}": {
      "get": {
        "tags": [
          "UnSuported"
        ],
        "summary": "Find resource by ID",
        "description": "Entity used to provide reference to an external system.",
        "displayName": "External SystemReference",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ExternalSystemReference"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "UnSuported"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ExternalSystemReference"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ExternalSystemReference"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "UnSuported"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/featurecollection": {
      "post": {
        "tags": [
          "Location"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FeatureCollection"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/featurecollection/{id}": {
      "get": {
        "tags": [
          "Location"
        ],
        "summary": "Find resource by ID",
        "description": "Lists of geometries are represented by a GeometryCollection. Geometries with additional properties are Feature objects. And lists of features are represented by a FeatureCollection.",
        "displayName": "Feature Collection",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/FeatureCollection"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Location"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FeatureCollection"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/FeatureCollection"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Location"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/user": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Find resource by ID",
        "description": "A person or organization that uses products and services from the enterprise (external), or an operator working on management systems in the service provider environment (internal). This is modeled as a Party playing the role of User. A User is a type of PartyRole.",
        "displayName": "User ",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Customer"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/usergroup": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserGroup"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/usergroup/{id}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Find resource by ID",
        "description": "A collection of Users. Can be used independently without the User entity.",
        "displayName": "User Group",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UserGroup"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UserGroup"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Customer"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/individual": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Individual"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/individual/{id}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Find resource by ID",
        "description": "A party that is an individual (i.e., a person).",
        "displayName": "Individual ",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Individual"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Individual"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Individual"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Customer"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/organization": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Organization"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/organization/{id}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Find resource by ID",
        "description": "A group of people identified by shared interests or purpose. Examples include business, department, enterprise. Both organizations and organizational units are represented by this business entity.User.",
        "displayName": "Organization ",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Organization"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Organization"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Organization"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Customer"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/postalcontact": {
      "post": {
        "tags": [
          "Common"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostalContact"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/postalcontact/{id}": {
      "get": {
        "tags": [
          "Common"
        ],
        "summary": "Find resource by ID",
        "description": "The postal information to use when contacting a given PartyRole. The actual address information is stored in the relationship to GeographicAddress. A PostalContact is a type of ContactMedium.",
        "displayName": "Postal Contact",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PostalContact"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Common"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PostalContact"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PostalContact"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Common"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/device": {
      "post": {
        "tags": [
          "Resource"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Device"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/device/{id}": {
      "get": {
        "tags": [
          "Resource"
        ],
        "summary": "Find resource by ID",
        "description": "A piece of equipment that provides functionality or is used to access services from the provider (e.g. mobile phone, tablet, gateway, etc.).",
        "displayName": "Device ",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Device"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Resource"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Device"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Device"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Resource"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/product/evc": {
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EVCProduct"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/product/evc/{id}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Find resource by ID",
        "description": "A ProductOffering procured by a Customer, or other interested Party playing a PartyRole, appearing as a BusinessInteractionItem, which could take the form of a Agreement. ProductSpecificationCharacteristic(s) in part define the Product. A Product is realized as one or more Service(s) and/or Resource(s).",
        "displayName": "EVC Product",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/EVCProduct"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Product"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EVCProduct"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/EVCProduct"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Product"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/product/uni": {
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UNIProduct"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/product/uni/{id}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Find resource by ID",
        "description": "A ProductOffering procured by a Customer, or other interested Party playing a PartyRole, appearing as a BusinessInteractionItem, which could take the form of a Agreement. ProductSpecificationCharacteristic(s) in part define the Product. A Product is realized as one or more Service(s) and/or Resource(s).",
        "displayName": "UNI Product",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UNIProduct"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Product"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UNIProduct"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UNIProduct"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Product"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/site": {
      "post": {
        "tags": [
          "Location"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Site"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/site/{id}": {
      "get": {
        "tags": [
          "Location"
        ],
        "summary": "Find resource by ID",
        "description": "ServiceSite is a customer location where a customer is receiving service. It is the point at which service is delivered to a customer, and is associated with a service address (UrbanPropertyAddress).",
        "displayName": "Site",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Site"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Location"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Site"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Site"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Location"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/site/{id}/services": {
      "get": {
        "tags": [
          "Location"
        ],
        "summary": "Find Services in a specific site",
        "description": "ServiceSite is a customer location where a customer is receiving service.  It is the point at which service is delivered to a customer, and is associated with a service address (UrbanPropertyAddress)..",
        "displayName": "Service on Site",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of the site to find services",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Service"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      }
    },
    "/customerorder": {
      "post": {
        "tags": [
          "Interaction"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerOrder"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/customerorder/{id}": {
      "get": {
        "tags": [
          "Interaction"
        ],
        "summary": "Find resource by ID",
        "description": "A CustomerOrder is a communication used to procure a Product. There are different types of CustomerOrders, such as AccessServiceRequests (ASRs), LocalServiceRequests (LSRs), DirectoryServiceRequests (DSRs), ProductOrders (PSRs).",
        "displayName": "Customer Order",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CustomerOrder"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Interaction"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerOrder"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CustomerOrder"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Interaction"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/account": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/account/{id}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Find resource by ID",
        "description": "An entity that defines the relationship between the customer and provider with respect to billing, payments, and other financial transactions. The customer account is also used to grant entitlement tokens based on services purchased.",
        "displayName": "Account ",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Customer"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/productconfiguration": {
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductConfiguration"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/productconfiguration/{id}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Find resource by ID",
        "description": "A ProductOffering procured by a Customer, or other interested Party playing a PartyRole, appearing as a BusinessInteractionItem, which could take the form of a Agreement. ProductSpecificationCharacteristic(s) in part define the Product. A Product is realized as one or more Service(s) and/or Resource(s).",
        "displayName": "Product Configuration",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ProductConfiguration"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Product"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductConfiguration"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ProductConfiguration"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Product"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/service/uniconfiguration": {
      "post": {
        "tags": [
          "Service"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UNIServiceConfiguration"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/service/uniconfiguration/{id}": {
      "get": {
        "tags": [
          "Service"
        ],
        "summary": "Find resource by ID",
        "description": "Serves as the point of demarcation that specifies where the Service Provider's (Operator's) responsibility ends and the customer's responsibility begins. The UNI is typically considered to reside at the customer network facing side of the PE equipment that the Service Provider places at the customer premises.The UNI has two sides: the UNI-C represents the customer premise facing side of the Provider Edge device, and the UNI-N represents the side of the PE that faces back towards the Service Provider (Operator) network.",
        "displayName": "UNI ServiceConfiguration",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UNIServiceConfiguration"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Service"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UNIServiceConfiguration"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UNIServiceConfiguration"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Service"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/user/{id}/tickets": {
      "post": {
        "tags": [
          "Interaction"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of User to whom the ticket needs to be created",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UsersTickets"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      },
      "get": {
        "tags": [
          "Interaction"
        ],
        "summary": "Find resource by ID",
        "description": "A record containing the details of an Incident. Each Ticket documents the lifecycle of a single incident.",
        "displayName": "Users  Tickets",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of User whose tickets need to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UsersTickets"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "UnSuported"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UsersTickets"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UsersTickets"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "UnSuported"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/service/evcconfiguration": {
      "post": {
        "tags": [
          "Service"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EVCServiceConfiguration"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/service/evcconfiguration/{id}": {
      "get": {
        "tags": [
          "Service"
        ],
        "summary": "Find resource by ID",
        "description": "The logical circuit that connects two or more customer networks (end points). The end points of an EVC are defined as UNIs. An intra-MEN EVC is an Ethernet Service that connects two (or more) UNIs provided by a single Operator within a single MEN. An inter-MEN EVC is an ENNI-based Ethernet Service that connects two or more UNIs that are located in different Operator MENs and physically provided by at least two MEN Operators.",
        "displayName": "EVC Service Configuration",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/EVCServiceConfiguration"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Service"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EVCServiceConfiguration"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/EVCServiceConfiguration"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Service"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/propertyaddress": {
      "post": {
        "tags": [
          "Location"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PropertyAddress"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/propertyaddress/{id}": {
      "get": {
        "tags": [
          "Location"
        ],
        "summary": "Find resource by ID",
        "description": "This is a structured textual way of describing how to find a Property in an urban area (country properties are often defined differently).",
        "displayName": "Property Address",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PropertyAddress"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Location"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PropertyAddress"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PropertyAddress"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Location"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/product/eplconfiguration": {
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EPLProductConfiguration"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/product/eplconfiguration/{id}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Find resource by ID",
        "description": "Ethernet Private Line (EPL) – A port-based version of the MEF-defined E-Line service type that connects two UNIs via a single EVC. EPL does not allow more than one EVC to be established between the two end points (UNIs) of the links, and all customer traffic present at an Operator's Provider Edge device is bundled into a single virtual circuit (i.e., the EVC). ",
        "displayName": "EPL Product Configuration",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/EPLProductConfiguration"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Product"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EPLProductConfiguration"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/EPLProductConfiguration"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Product"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/productprice": {
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductPrice"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/productprice/{id}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Find resource by ID",
        "description": "An amount, usually of money, that represents the actual price paid by a Customer for a purchase, a rent or a lease of a Product. The price is valid for a defined period of time.",
        "displayName": "Product Price",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ProductPrice"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Product"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductPrice"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ProductPrice"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Product"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/customerquoteitem": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerQuoteItem"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/customerquoteitem/{id}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "Customer QuoteItem",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CustomerQuoteItem"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerQuoteItem"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CustomerQuoteItem"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Customer"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/geographicaddress": {
      "post": {
        "tags": [
          "UnSuported"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GeographicAddress"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/geographicaddress/{id}": {
      "get": {
        "tags": [
          "UnSuported"
        ],
        "summary": "Find resource by ID",
        "description": "A structured textual way of describing how to find a Geographic Location. It is usually composed of an ordered list of Geographic Location names based on context specific rulesIt is an abstract modeling concept that provides a linking point to other parts of the SID model.It holds attributes common to all Geographic Address subclasses.",
        "displayName": "Geographic  Address",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GeographicAddress"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "UnSuported"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GeographicAddress"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/GeographicAddress"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "UnSuported"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/property": {
      "post": {
        "tags": [
          "Location"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Property"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/property/{id}": {
      "get": {
        "tags": [
          "Location"
        ],
        "summary": "Find resource by ID",
        "description": "A piece of land with defined legal boundaries.This is an example of a concrete Geographic Location entity.",
        "displayName": "Property ",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Property"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Location"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Property"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Property"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Location"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/configurationdata": {
      "post": {
        "tags": [
          "Service"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConfigurationData"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/configurationdata/{id}": {
      "get": {
        "tags": [
          "Service"
        ],
        "summary": "Find resource by ID",
        "description": "Class to hold common properties of all captured configuration data (files, strings, binary data, ...).  Subclasses specify base, current, backup, proposed, disaster recovery, etc configuration data.",
        "displayName": "Configuration Data",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ConfigurationData"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Service"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConfigurationData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ConfigurationData"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Service"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/feature": {
      "post": {
        "tags": [
          "Location"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Feature"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/feature/{id}": {
      "get": {
        "tags": [
          "Location"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "Feature ",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Feature"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Location"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Feature"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Feature"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Location"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/service/uni": {
      "post": {
        "tags": [
          "Service"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UNIService"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/service/uni/{id}": {
      "get": {
        "tags": [
          "Service"
        ],
        "summary": "Find resource by ID",
        "description": "Serves as the point of demarcation that specifies where the Service Provider's (Operator's) responsibility ends and the customer's responsibility begins. The UNI is typically considered to reside at the customer network facing side of the PE equipment that the Service Provider places at the customer premises. The UNI has two sides: the UNI-C represents the customer premise facing side of the Provider Edge device, and the UNI-N represents the side of the PE that faces back towards the Service Provider (Operator) network. The organization responsible for the UNI-to-UNI (end-to-end) Ethernet service, i.e., the company that the end user Subscriber has the primary commercial relationship with for Ethernet services.",
        "displayName": "UNI Service",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UNIService"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Service"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UNIService"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/UNIService"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Service"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/asbuiltorderdesign": {
      "post": {
        "tags": [
          "Service"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AsBuiltDesign"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/asbuiltorderdesign/{id}": {
      "get": {
        "tags": [
          "Service"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieve the portion of the as-built diagram relevant to a particular order (i.e., not the customer's entire network, just those portions that would be involved in a particular change order).",
        "displayName": "As  Built Design",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AsBuiltDesign"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Service"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AsBuiltDesign"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AsBuiltDesign"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Service"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/customerorderitem": {
      "post": {
        "tags": [
          "Interaction"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerOrderItem"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/customerorderitem/{id}": {
      "get": {
        "tags": [
          "Interaction"
        ],
        "summary": "Find resource by ID",
        "description": "The purpose for the Customer Order expressed in terms of a Product Offering or a Product (for a change order) inherited from BusinessInteractionItem.",
        "displayName": "Customer OrderItem",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CustomerOrderItem"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Interaction"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerOrderItem"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CustomerOrderItem"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Interaction"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/paymentplan": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PaymentPlan"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/paymentplan/{id}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "Payment Plan",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "PaymentPlan defines the plan for payment via its associations to the PaymentMethod and PaymentItem priorities.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PaymentPlan"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PaymentPlan"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/PaymentPlan"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Customer"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/systemcontact": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SystemContact"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/systemcontact/{id}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Find resource by ID",
        "description": "Provides a system application means of contact for a particular party role, that is not defined by other ContactMedium subclasses/mechanisms. For example notification by instant message or trouble ticket generation and auto-assignment.",
        "displayName": "System  Contact",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SystemContact"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SystemContact"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SystemContact"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Customer"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/telephonenumber": {
      "post": {
        "tags": [
          "Common"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TelephoneNumber"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/telephonenumber/{id}": {
      "get": {
        "tags": [
          "Common"
        ],
        "summary": "Find resource by ID",
        "description": "The phone number to use when contacting a given PartyRole. A TelephoneNumber is a type of ContactMedium.",
        "displayName": "Telephone  Number",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TelephoneNumber"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Common"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TelephoneNumber"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TelephoneNumber"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Common"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/serviceorder": {
      "post": {
        "tags": [
          "Interaction"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceOrder"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/serviceorder/{id}": {
      "get": {
        "tags": [
          "Interaction"
        ],
        "summary": "Find resource by ID",
        "description": "A type of Request that represents a Customer Order's products decomposed into the services through which the products are realized.",
        "displayName": "Service  Order",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ServiceOrder"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Interaction"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceOrder"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ServiceOrder"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Interaction"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/serviceorder/sat": {
      "post": {
        "tags": [
          "Interaction"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SAT"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/serviceorder/sat/{id}": {
      "get": {
        "tags": [
          "Interaction"
        ],
        "summary": "Find resource by ID",
        "description": "The SiteAcceptanceTest is to invoke, and get results from, end-to-end acceptance testing.",
        "displayName": "SAT",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SAT"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Interaction"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SAT"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/SAT"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Interaction"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/product": {
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/product/{id}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Find resource by ID",
        "description": "A ProductOffering procured by a Customer, or other interested Party playing a PartyRole, appearing as a BusinessInteractionItem, which could take the form of a Agreement. ProductSpecificationCharacteristic(s) in part define the Product. A Product is realized as one or more Service(s) and/or Resource(s).",
        "displayName": "Product ",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Product"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Product"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/comment": {
      "post": {
        "tags": [
          "Interaction"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Comment"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/comment/{id}": {
      "get": {
        "tags": [
          "Interaction"
        ],
        "summary": "Find resource by ID",
        "description": "An entry to the log of an Ticket.",
        "displayName": "Comment ",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Comment"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Interaction"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Comment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Comment"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Interaction"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/customerpayment": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerPayment"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/customerpayment/{id}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Find resource by ID",
        "description": "CustomerPayment represents the transfer of wealth from a customer for a product or usage of product.",
        "displayName": "Customer Payment",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CustomerPayment"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerPayment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CustomerPayment"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Customer"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/customerquote": {
      "post": {
        "tags": [
          "Interaction"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerQuote"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/customerquote/{id}": {
      "get": {
        "tags": [
          "Interaction"
        ],
        "summary": "Find resource by ID",
        "description": "A price estimate (quote) or a presentation for sale (offer) of product offerings to a party playing a role.",
        "displayName": "Customer Quote",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CustomerQuote"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Interaction"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerQuote"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CustomerQuote"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Interaction"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/productoffering": {
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductOffering"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/productoffering/{id}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Find resource by ID",
        "description": "The presentation of one or more ProductSpecifications to the marketplace for sale, rental, or lease for a ProductOfferingPrice. A ProductOffering may target one or more MarketSegments, be included in one or more ProductCatalog, presented in support of one or more ProductStrategies, and made available in one or more Places. ProductOffering may represent a simple offering of a single ProductSpecification or could represent a bundling of one or more other ProductOffering",
        "displayName": "Product Offering",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ProductOffering"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Product"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductOffering"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ProductOffering"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Product"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/ticketlocation": {
      "post": {
        "tags": [
          "Location"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TicketLocation"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/ticketlocation/{id}": {
      "get": {
        "tags": [
          "Location"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "Ticket Location",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TicketLocation"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Location"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TicketLocation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TicketLocation"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Location"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/serviceconfiguration": {
      "post": {
        "tags": [
          "Service"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceConfiguration"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/serviceconfiguration/{id}": {
      "get": {
        "tags": [
          "Service"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "Service Configuration",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ServiceConfiguration"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Service"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceConfiguration"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ServiceConfiguration"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Service"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/cableservicearea": {
      "post": {
        "tags": [
          "Location"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CableServiceArea"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/cableservicearea/{id}": {
      "get": {
        "tags": [
          "Location"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "Cable ServiceArea",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CableServiceArea"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Location"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CableServiceArea"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CableServiceArea"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Location"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/customerbill": {
      "post": {
        "tags": [
          "Interaction"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerBill"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/customerbill/{id}": {
      "get": {
        "tags": [
          "Interaction"
        ],
        "summary": "Find resource by ID",
        "description": "A total amount due from a CustomerAccount for all products during the billing period.",
        "displayName": "Customer Bill",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CustomerBill"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Interaction"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerBill"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CustomerBill"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Interaction"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/resource/ethernetinterface": {
      "post": {
        "tags": [
          "Service"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EthernetInterface"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/resource/ethernetinterface/{id}": {
      "get": {
        "tags": [
          "Service"
        ],
        "summary": "Find resource by ID",
        "description": "Retrieves an instance based on the ID",
        "displayName": "Ethernet Interface",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/EthernetInterface"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Service"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EthernetInterface"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/EthernetInterface"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Service"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    },
    "/emailcontact": {
      "post": {
        "tags": [
          "Common"
        ],
        "summary": "Create a new resource",
        "description": "Create a new instance of the resource.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmailContact"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instance Created"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/emailcontact/{id}": {
      "get": {
        "tags": [
          "Common"
        ],
        "summary": "Find resource by ID",
        "description": "The eMail address to use when contacting a given PartyRole. An eMailContact is a type of ContactMedium.",
        "displayName": "Email  Contact",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of instance that needs to be fetched",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "view",
            "description": "View of the resource that you want to get.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/EmailContact"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          }
        }
      },
      "put": {
        "tags": [
          "Common"
        ],
        "summary": "Update an existing resource",
        "description": "Update a specific instance of the resource by ID.",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Instance object that needs to be updated.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmailContact"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/EmailContact"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Instance not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      },
      "delete": {
        "tags": [
          "Common"
        ],
        "summary": "Deletes an resource based on ID.",
        "description": "Delete a specific instance based on the ID",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Instance id to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted."
          },
          "400": {
            "description": "Invalid Instance value"
          }
        }
      }
    }
  },
  "schemes": [
    "http"
  ],
  "definitions": {
    "Link": {
      "id": "Link",
      "properties": {
        "href": {
          "type": "string"
        },
        "rel": {
          "type": "string"
        }
      }
    },
    "Quantity": {
      "id": "Quantity",
      "type": "Object",
      "properties": {
        "amount": {
          "type": "string"
        },
        "units": {
          "type": "string"
        }
      }
    },
    "Money": {
      "id": "Money",
      "properties": {
        "amount": {
          "type": "string"
        },
        "units": {
          "type": "string"
        }
      }
    },
    "Duration": {
      "id": "Duration",
      "properties": {
        "units": {
          "type": "string"
        },
        "amount": {
          "type": "number"
        }
      }
    },
    "CostRate": {
      "id": "CostRate",
      "properties": {
        "denominator": {
          "$ref": "Duration"
        },
        "numerator": {
          "$ref": "Money"
        }
      }
    },
    "Account": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "accountNumber": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "description": "Individual, Joint, Other"
        },
        "pin": {
          "type": "integer"
        },
        "status": {
          "type": "string",
          "description": "Active, Suspended, Inactive, Closed"
        },
        "financialStatus": {
          "type": "string",
          "description": "Current, Due ,InArrears, Delinquent"
        },
        "creditLimit": {
          "type": "integer"
        },
        "customer": {
          "$ref": "CustomerSummary"
        },
        "serviceAddress": {
          "$ref": "PropertyAddress"
        },
        "primaryUser": {
          "$ref": "UserSummary"
        },
        "users": {
          "type": "array",
          "items": {
            "$ref": "UserSummary"
          }
        },
        "financials": {
          "$ref": "FinancialSummary"
        },
        "billing": {
          "$ref": "BillingSummary"
        },
        "payments": {
          "$ref": "PaymentSummary"
        },
        "products": {
          "type": "array",
          "items": {
            "$ref": "ProductSummary"
          }
        },
        "devices": {
          "type": "array",
          "items": {
            "$ref": "DeviceSummary"
          }
        },
        "taxExemptions": {
          "$ref": "TaxExemptions"
        },
        "sites": {
          "type": "array",
          "items": {
            "$ref": "SiteSummary"
          }
        },
        "preferences": {
          "type": "array",
          "items": {
            "$ref": "PreferenceSummary"
          }
        },
        "relatedAccounts": {
          "type": "array",
          "items": {
            "$ref": "AccountSummary"
          }
        }
      }
    },
    "AccountSummary": {
      "id": "AccountSummary",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Contact": {
      "id": "Contact",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "contactType": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "validFor": {
          "$ref": "TimePeriod"
        },
        "individual": {
          "$ref": "Individual"
        },
        "contactMediums": {
          "$ref": "ContactMedium"
        },
        "partyDetails": {
          "$ref": "PartySummary"
        }
      }
    },
    "ContactMedium": {
      "id": "ContactMedium",
      "type": "object",
      "properties": {
        "telephoneNumbers": {
          "type": "array",
          "items": {
            "$ref": "TelephoneNumber"
          }
        },
        "faxNumbers": {
          "type": "array",
          "items": {
            "$ref": "FaxNumber"
          }
        },
        "emailContacts": {
          "type": "array",
          "items": {
            "$ref": "EmailContact"
          }
        },
        "postalContacts": {
          "type": "array",
          "items": {
            "$ref": "PostalContact"
          }
        },
        "systemContacts": {
          "type": "array",
          "items": {
            "$ref": "SystemContact"
          }
        }
      }
    },
    "TimePeriod": {
      "id": "TimePeriod",
      "properties": {
        "endDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "startDateTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "AccountContact": {
      "id": "AccountContact",
      "properties": {
        "serviceSites": {
          "type": "array",
          "items": {
            "$ref": "Site"
          }
        },
        "acccount": {
          "$ref": "Account"
        },
        "validFor": {
          "$ref": "TimePeriod"
        },
        "contactType": {
          "$ref": "AccountContactType"
        },
        "contactMediums": {
          "type": "array",
          "items": {
            "$ref": "ContactMedium"
          }
        },
        "contact": {
          "$ref": "Contact"
        }
      }
    },
    "SiteCategory": {
      "id": "SiteCategory",
      "properties": {
        "categoryDescription": {
          "type": "string"
        },
        "categoryName": {
          "type": "string"
        }
      }
    },
    "CLLICode": {
      "id": "CLLICode",
      "type": "object",
      "properties": {
        "formattedClliCode": {
          "type": "string",
          "description": "Eight or eleven digit formatted CLLI code string."
        },
        "clliType": {
          "type": "string",
          "description": "0 = Unknown, 1 = Network Site (location) format; used by ProviderSite., 2 = Network Support Site format; used by ProviderSite., 3 = Network Entity format; used by Resource., 4 = Customer Site format; used by ServiceSite."
        },
        "clliGeographicCode": {
          "type": "string",
          "description": "Four-character geographical area and geographical area type. Regex: [A-Z0-9][A-Z0-9][A-Z0-9][A-Z0-9][A-Z0-9][A-Z0-9]"
        },
        "clliGeopoliticalCode": {
          "type": "string",
          "description": "Two characters to denote the state, province, or country. Each territory is identified using its two-letter ISO 3166-2:CA or ISO 3166-2:US postal abbreviation suffix (with exceptions: Qu�bec as PQ and Nunavut written as VU). Regex: [A-Z][A-Z]"
        },
        "clliNetworkSiteCode": {
          "type": "string",
          "description": "The Network Site code denotes the specific location or building address. These will be either two letters or two numbers. Regex: \\([0-9][0-9]\\)|\\([A-Z][A-Z]\\)"
        },
        "clliNetworkEntityCode": {
          "type": "string",
          "description": "Three-character Network Entity codes specify a particular type of equipment function at a Network Site location. Regex: [A-Z][A-Z][A-Z]"
        },
        "clliNetSupportSiteCode": {
          "type": "string",
          "description": "A Network Support Site code consists of 5 characters representing any non-building structures or outside plant equipment such as Wireless Access Points, International Boundary Crossing Points, End-Points, Fiber Nodes, Junctions, Manholes, Poles, Base Transceiver Station / Radio Equipment and Repeaters. This is either structured as 1-char location type and 4-digit identifying number, or STLT (satellite) EO (earth orbit satellite). Regex: \\([A-Z][0-9][0-9][0-9][0-9]\\)|\\(STLT\\)|\\(EO\\)"
        },
        "clliCustomerSiteCode": {
          "type": "string",
          "description": "A Customer Site code is used to uniquely identify customer locations. These locations are required to identify customers, circuit terminations, facilities, or equipment for each specific customer for facility provisioning or other requirements. �This is structured as a digit, followed by a letter, then three more digits. Regex: [0-9][A-Z][0-9][0-9][0-9]"
        }
      }
    },
    "GeographicLocation": {
      "type": "object",
      "properties": {
        "cableServiceArea": {
          "type": "object",
          "$ref": "CableServiceArea"
        },
        "adiminstrativeArea": {
          "type": "object",
          "$ref": "AdministrativeArea"
        },
        "emergencyServiceZone": {
          "type": "object",
          "$ref": "EmergencyServiceZone"
        },
        "geographicArea": {
          "type": "object",
          "$ref": "GeographicArea"
        },
        "timeZoneRegion": {
          "type": "object",
          "$ref": "TimeZoneRegion"
        },
        "property": {
          "type": "object",
          "$ref": "Property"
        },
        "marketArea": {
          "type": "object",
          "$ref": "MarketArea"
        },
        "exchangeServiceArea": {
          "type": "object",
          "$ref": "ExchangeServiceArea"
        },
        "rateGroupRegion": {
          "type": "object",
          "$ref": "RateGroupRegion"
        },
        "accuracy": {
          "type": "string"
        },
        "geometry": {
          "type": "object",
          "$ref": "Geometry"
        },
        "rateCenter": {
          "type": "object",
          "$ref": "RateCenter"
        }
      }
    },
    "Property": {
      "id": "Property",
      "properties": {
        "id": {
          "type": "string"
        },
        "lotNr": {
          "type": "string"
        },
        "landUse": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "elevation": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "landCover": {
          "type": "string"
        },
        "propertyAddresses": {
          "type": "array",
          "items": {
            "$ref": "PropertyAddress"
          }
        },
        "naturalRisks": {
          "type": "string"
        },
        "geometry": {
          "$ref": "Geometry",
          "required": true
        }
      }
    },
    "ServiceSummary": {
      "id": "ServiceSummary",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        }
      }
    },
    "SiteType": {
      "id": "SiteType",
      "properties": {
        "description": {
          "type": "string"
        },
        "multiTenant": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "validFor": {
          "$ref": "TimePeriod"
        }
      }
    },
    "VHCoordinates": {
      "id": "VHCoordinates",
      "properties": {
        "horizontalCoordinate": {
          "type": "string"
        },
        "verticalCoordinate": {
          "type": "string"
        }
      }
    },
    "PropertyAddress": {
      "id": "PropertyAddress",
      "properties": {
        "id": {
          "type": "string"
        },
        "postalcode": {
          "type": "string"
        },
        "state_province": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "locality": {
          "type": "string"
        },
        "property": {
          "$ref": "Property"
        },
        "formattedAddressLine2": {
          "type": "string"
        },
        "formattedAddressLine1": {
          "type": "string"
        },
        "postcodeExtension": {
          "type": "string"
        },
        "country": {
          "type": "string"
        }
      }
    },
    "Site": {
      "id": "Site",
      "properties": {
        "geographicLocations": {
          "type": "array",
          "items": {
            "$ref": "GeographicLocation"
          }
        },
        "structureHeight": {
          "$ref": "Quantity",
          "required": true
        },
        "vhCoordinates": {
          "type": "object",
          "$ref": "VHCoordinates",
          "required": true
        },
        "customerAccounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "Account"
          }
        },
        "status": {
          "type": "object",
          "$ref": "SiteStatus",
          "required": true
        },
        "link": {
          "type": "object",
          "$ref": "Link",
          "required": true
        },
        "propertyAddress": {
          "type": "object",
          "$ref": "PropertyAddress",
          "required": true
        },
        "type": {
          "type": "object",
          "$ref": "SiteType",
          "required": true
        },
        "id": {
          "type": "string"
        },
        "siteHours": {
          "type": "string"
        },
        "category": {
          "type": "object",
          "$ref": "SiteCategory",
          "required": true
        },
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "validFor": {
          "type": "object",
          "$ref": "TimePeriod",
          "required": true
        },
        "clliCode": {
          "type": "object",
          "$ref": "CLLICode",
          "required": true
        },
        "typeOfSite": {
          "type": "object",
          "$ref": "TypeOfSite",
          "required": true
        },
        "accountContacts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "AccountContactAssignment"
          }
        }
      }
    },
    "SiteSummary": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "type": "object",
          "$ref": "Link"
        }
      }
    },
    "Location": {
      "id": "Location",
      "properties": {
        "site": {
          "$ref": "Site"
        },
        "propertyAddress": {
          "$ref": "PropertyAddress"
        }
      }
    },
    "ProductConfiguration": {
      "id": "ProductConfiguration",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "name": {
          "type": "string"
        },
        "isBundle": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "productStatus": {
          "type": "string"
        },
        "productSerialNumber": {
          "type": "string"
        },
        "validFor": {
          "$ref": "TimePeriod"
        },
        "products": {
          "$ref": "ProductConfiguration"
        },
        "serviceConfigurations": {
          "$ref": "ServiceConfiguration"
        },
        "product": {
          "$ref": "Product"
        },
        "productProperties": {
          "$ref": "ProductProperties"
        }
      }
    },
    "EPLConfiguration": {
      "id": "EPLConfiguration",
      "type": "obkect",
      "properties": {
        "bandwidth": {
          "$ref": "Quantity"
        },
        "a_Address": {
          "$ref": "Site"
        },
        "z_Address": {
          "$ref": "Site"
        }
      }
    },
    "EVCProductConfiguration": {
      "id": "EVCProductConfiguration",
      "properties": {
        "bandwidth": {
          "$ref": "Quantity"
        },
        "a_Address": {
          "$ref": "Site"
        },
        "z_Address": {
          "$ref": "Site"
        }
      }
    },
    "UNIProductConfiguration": {
      "id": "UNIProductConfiguration",
      "properties": {
        "bandwidth": {
          "$ref": "Quantity"
        },
        "address": {
          "$ref": "Site"
        }
      }
    },
    "UNIProduct": {
      "id": "UNIProduct",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "name": {
          "type": "string"
        },
        "isBundle": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "productStatus": {
          "type": "string"
        },
        "productSerialNumber": {
          "type": "string"
        },
        "validFor": {
          "$ref": "TimePeriod"
        },
        "uniService": {
          "$ref": "UNIService"
        },
        "uniProductConfiguration": {
          "$ref": "UNIProductConfiguration"
        }
      }
    },
    "EVCServiceSummary": {
      "id": "EVCServiceSummary",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "hasStarted": {
          "type": "boolean"
        },
        "isServiceEnabled": {
          "type": "boolean"
        },
        "isMandatory": {
          "type": "boolean"
        }
      }
    },
    "EVCService": {
      "id": "EVCService",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "hasStarted": {
          "type": "boolean"
        },
        "isServiceEnabled": {
          "type": "boolean"
        },
        "isMandatory": {
          "type": "boolean"
        },
        "startMode": {
          "type": "number",
          "description" : "0:  Unknown, 1:  Automatically by the managed environment, 2:  Automatically by the owning device, 3:  Manually by the Provider of the Service, 4:  Manually by a Customer of the Provider, 5:  Any of the above"
        },
        "isStateful": {
          "type": "boolean"
        },
        "isFCCReportable": {
          "type": "boolean"
        },
        "isTSP": {
          "type": "boolean"
        },
        "isResourceFacingService": {
          "type": "boolean"
        },
        "isCustomerFacingService": {
          "type": "boolean"
        },
        "rfsStatus": {
          "type": "number"
        },
        "cfsStatus": {
          "type": "number"
        },
        "customerFacingService": {
          "type": "array",
          "items": {
            "$ref": "EVCServiceSummary"
          }
        },
        "resourceFacingService": {
          "type": "array",
          "items": {
            "$ref": "EVCServiceSummary"
          }
        },
        "unis": {
          "type": "array",
          "items": {
            "$ref": "UNIServiceSummary"
          }
        },
        "configuration": {
          "$ref": "EVCConfiguration"
        },
        "path": {
          "$ref": "NetworkPath"
        }

      }
    },
    "EVCProduct": {
      "id": "EVCProduct",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "name": {
          "type": "string"
        },
        "isBundle": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "productStatus": {
          "type": "string"
        },
        "productSerialNumber": {
          "type": "string"
        },
        "validFor": {
          "$ref": "TimePeriod"
        },
        "evcService": {
          "$ref": "EVCService"
        },
        "evcProductConfiguration": {
          "$ref": "EVCProductConfiguration"
        }
      }
    },
    "EPLProductSummary": {
      "id": "EPLProductSummary",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "name": {
          "type": "string"
        },
        "isBundle": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "productStatus": {
          "type": "string"
        },
        "productSerialNumber": {
          "type": "string"
        }
      }
    },
    "EPLProduct": {
      "id": "EPLProduct",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "name": {
          "type": "string"
        },
        "isBundle": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "productStatus": {
          "type": "string"
        },
        "productSerialNumber": {
          "type": "string"
        },
        "validFor": {
          "$ref": "TimePeriod"
        },
        "products": {
          "type": "array",
          "items": {
            "$ref": "EPLProductSummary"
          }
        },
        "productRelationships": {
          "type": "array",
          "items": {
            "$ref": "ProductRelationship"
          }
        },
        "productPrices": {
          "type": "array",
          "items": {
            "$ref": "ProductPriceSummary"
          }
        },
        "customerAccountInvolvements": {
          "type": "array",
          "items": {
            "$ref": "AccountProductAssignment"
          }
        },
        "productOrderItem": {
          "$ref": "ProductOrderItem"
        },
        "productSpecification": {
          "$ref": "ProductSpecificationSummary"
        },
        "productOffering": {
          "$ref": "ProductOfferingSummary"
        },
        "configuration": {
          "$ref": "EPLConfiguration"
        },
        "uniProducts": {
          "type": "array",
          "items": {
            "$ref": "UNIProductSummary"
          }
        },
        "evcProduct": {
          "$ref": "EVCProductSummary"
        }
      }
    },
    "ProductOrderItem": {
      "id": "ProductOrderItem",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "action": {
          "type": "string"
        },
        "orderItemState": {
          "type": "string",
          "description": "NEW, PRESALES, POSTSALES, PROVISIONING, ACTIVATION, CANCELED, COMPLETED, WAITING_ON_EXTERNAL_ACTION"
        },
        "quantity": {
          "$ref": "Quantity"
        },
        "productConfiguration": {
          "$ref": "ProductConfiguration"
        },
        "device": {
          "$ref": "DeviceSummary"
        },
        "eplProduct": {
          "$ref": "EPLProductSummary"
        },
        "stateTransitions": {
          "type": "array",
          "items": {
            "$ref": "Link"
          }
        }
      }
    },
    "CustomerQuoteItem": {
      "id": "CustomerQuoteItem",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "nonRecurringCost": {
          "$ref": "Money"
        },
        "recurringCost": {
          "$ref": "CostRate"
        },
        "action": {
          "type": "string"
        },
        "interactionItemStatus": {
          "type": "string"
        },
        "quantity": {
          "$ref": "Quantity"
        }
      }
    },
    "Customer": {
      "id": "Customer",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "name": {
          "type": "string"
        },
        "profile": {
          "$ref": "PartySummary"
        },
        "customerId": {
          "type": "string"
        },
        "customerRank": {
          "type": "string"
        },
        "customerSegment": {
          "$ref": "CustomerSegment"
        },
        "status": {
          "type": "string"
        },
        "contactPhones": {
          "type": "array",
          "items": {
            "$ref": "TelephoneNumber"
          }
        },
        "contactEmails": {
          "type": "array",
          "items": {
            "$ref": "EmailContact"
          }
        },
        "accounts": {
          "type": "array",
          "items": {
            "$ref": "AccountSummary"
          }
        }
      }
    },
    "CustomerQuote": {
      "id": "CustomerQuote",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "description": {
          "type": "string"
        },
        "interactionDate": {
          "type": "date"
        },
        "interactionDateComplete": {
          "type": "date"
        },
        "interactionStatus": {
          "type": "string"
        },
        "customer": {
          "$ref": "Customer"
        },
        "customerQuoteItems": {
          "type": "array",
          "items": {
            "$ref": "CustomerQuoteItem"
          }
        }
      }
    },
    "ProductOrderSummary": {
      "id": "ProductOrderSummary",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "orderState": {
          "type": "string",
          "description": "NEW, SUBMITTED, INPROGRESS, CANCELED, COMPLETED, WAITING_ON_EXTERNAL_ACTION"
        },
        "customerOrderType": {
          "type": "string",
          "description": "NewConnect, Disconnect, RecordsCorrection, Modifiy"
        },
        "feasibility": {
          "type": "string",
          "description": "FEASIBLE, CHANGED, NOTFEASIBLE"
        },
        "purchaceOrderNumber": {
          "type": "string"
        },
        "dueDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ProductOrder": {
      "id": "ProductOrder",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "orderState": {
          "type": "string",
          "description": "NEW, SUBMITTED, INPROGRESS, CANCELED, COMPLETED, WAITING_ON_EXTERNAL_ACTION"
        },
        "customerOrderType": {
          "type": "string",
          "description": "NewConnect, Disconnect, RecordsCorrection, Modifiy"
        },
        "feasibility": {
          "type": "string",
          "description": "FEASIBLE, CHANGED, NOTFEASIBLE"
        },
        "purchaceOrderNumber": {
          "type": "string"
        },
        "orderType": {
          "type": "string",
          "description": "ADDRESSCHANGE, BANDWIDTHCHANGE, OTHER"
        },
        "newState": {
          "$ref": "Quantity"
        },
        "description": {
          "type": "string"
        },
        "saleSource": {
          "type": "string"
        },
        "interactionStatus": {
          "type": "string"
        },
        "assignedPriority": {
          "type": "number"
        },
        "interactionDate": {
          "type": "string",
          "format": "date-time"
        },
        "interactionDateComplete": {
          "type": "string",
          "format": "date-time"
        },
        "assignedResponseDate": {
          "type": "string",
          "format": "date-time"
        },
        "dueDate": {
          "type": "string",
          "format": "date-time"
        },
        "productOrderItems": {
          "type": "array",
          "items": {
            "$ref": "ProductOrderItem"
          }
        },
        "customerQuote": {
          "$ref": "CustomerQuote"
        },
        "existingSite": {
          "$ref": "SiteSummary"
        },
        "newSite": {
          "$ref": "SiteSummary"
        },
        "account": {
          "$ref": "AccountSummary"
        }
      }
    },
    "ServiceConfigurationSummary": {
      "id": "ServiceConfigurationSummary",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "hasStarted": {
          "type": "boolean"
        },
        "isServiceEnabled": {
          "type": "boolean"
        },
        "isMandatory": {
          "type": "boolean"
        }
      }
    },
    "ServiceConfiguration": {
      "id": "ServiceConfiguration",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "hasStarted": {
          "type": "boolean"
        },
        "isServiceEnabled": {
          "type": "boolean"
        },
        "isMandatory": {
          "type": "boolean"
        },
        "startMode": {
          "type": "integer",
          "description": "0:  Unknown, 1:  Automatically by the managed environment, 2:  Automatically by the owning device, 3:  Manually by the Provider of the Service, 4:  Manually by a Customer of the Provider, 5:  Any of the above"
        },
        "isStateful": {
          "type": "boolean"
        },
        "isFCCReportable": {
          "type": "boolean"
        },
        "isTSP": {
          "type": "boolean"
        },
        "isResourceFacingService": {
          "type": "boolean"
        },
        "isCustomerFacingService": {
          "type": "boolean"
        },
        "rfsStatus": {
          "type": "integer"
        },
        "cfsStatus": {
          "type": "integer"
        },
        "customerFacingService": {
          "type": "array",
          "items": {
            "$ref": "ServiceConfigurationSummary"
          }
        },
        "resourceFacingService": {
          "type": "array",
          "items": {
            "$ref": "ServiceConfigurationSummary"
          }
        },
        "service": {
          "$ref": "ServiceSummary"
        },
        "configurationDatas": {
          "type": "array",
          "items": {
            "$ref": "ConfigurationData"
          }
        },
        "resourceFacingServices": {
          "type": "array",
          "items": {
            "$ref": "ResourceConfiguration"
          }
        }
      }
    },
    "ResourceConfiguration": {
      "id": "ResourceConfiguration",
      "type": "object",
      "properties": {
        "resources": {
          "type": "array",
          "items": {
            "$ref": "ServiceConfigurationSummary"
          }
        }
      }
    },
    "ServiceOrderItem": {
      "id": "ServiceOrderItem",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "action": {
          "type": "string",
          "description": "ADDRESSCHANGE, BANDWIDTHCHANGE, OTHER"
        },
        "quantity": {
          "$ref": "Quantity"
        },
        "interactionItemStatus": {
          "type": "string"
        },
        "locations": {
          "type": "array",
          "items": {
            "$ref": "Location"
          }
        },
        "serviceConfiguration": {
          "$ref": "ServiceConfiguration"
        },
        "device": {
          "$ref": "DeviceSummary"
        },
        "evcServiceConfiguration": {
          "$ref": "EVCServiceConfigurationSummary"
        },
        "uniServiceConfigurations": {
          "type": "array",
          "items": {
            "$ref": "UNIServiceConfigurationSummary"
          }
        },
        "orderDesign": {
          "$ref": "OrderDesign"
        }
      }
    },
    "ServiceOrder": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "description": {
          "type": "string"
        },
        "interactionDate": {
          "type": "string",
          "format": "date-time"
        },
        "interactionDateComplete": {
          "type": "string",
          "format": "date-time"
        },
        "interactionStatus": {
          "type": "string"
        },
        "serviceOrderItems": {
          "type": "array",
          "items": {
            "$ref": "ServiceOrderItem"
          }
        },
        "locations": {
          "type": "array",
          "items": {
            "$ref": "Location"
          }
        },
        "characteristics": {
          "type": "array",
          "items": {
            "$ref": "Characteristic"
          }
        },
        "customers": {
          "type": "array",
          "items": {
            "$ref": "CustomerSummary"
          }
        },
        "accounts": {
          "type": "array",
          "items": {
            "$ref": "AccountSummary"
          }
        },
        "sat": {
          "$ref": "SAT"
        },
        "asBuiltOrderDesign": {
          "$ref": "AsBuiltOrderDesign"
        }
      }
    },
    "SAT": {
      "id": "SAT",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "pass": {
          "type": "boolean"
        },
        "throughput": {
          "$ref": "Quantity"
        },
        "frameloss": {
          "$ref": "Quantity"
        },
        "latency": {
          "$ref": "Quantity"
        },
        "systemreset": {
          "type": "boolean"
        },
        "systemrecover": {
          "type": "boolean"
        }
      }
    },
    "AsBuiltOrderDesign": {
      "id": "AsBuiltOrderDesign",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "status": {
          "type": "string"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "fullAsBuiltNetwork": {
          "$ref": "Link"
        },
        "evcService": {
          "$ref": "EVCServiceSummary"
        },
        "uniServices": {
          "type": "array",
          "items": {
            "$ref": "UNIServiceSummary"
          }
        }
      }
    },
    "EVCConfiguration": {
      "type": "object",
      "properties": {
        "configText": {
          "type": "string"
        },
        "configBinary": {
          "type": "number"
        },
        "configLocation": {
          "type": "object",
          "$ref": "Link"
        },
        "configActivationType": {
          "type": "string",
          "description": "Base, Current, Backup, Planned, Test, Template"
        },
        "isColorBlind": {
          "type": "boolean"
        },
        "bandwidth": {
          "$ref": "Quantity"
        }
      }
    },
    "EVCServiceConfigurationSummary": {
      "id": "EVCServiceConfigurationSummary",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "hasStarted": {
          "type": "boolean"
        },
        "isServiceEnabled": {
          "type": "boolean"
        },
        "isMandatory": {
          "type": "boolean"
        }
      }
    },
    "EVCServiceConfiguration": {
      "id": "EVCServiceConfiguration",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "hasStarted": {
          "type": "boolean"
        },
        "isServiceEnabled": {
          "type": "boolean"
        },
        "isMandatory": {
          "type": "boolean"
        },
        "startMode": {
          "type": "integer"
        },
        "isStateful": {
          "type": "boolean"
        },
        "isFCCReportable": {
          "type": "boolean"
        },
        "isTSP": {
          "type": "boolean"
        },
        "isResourceFacingService": {
          "type": "boolean"
        },
        "isCustomerFacingService": {
          "type": "boolean"
        },
        "rfsStatus": {
          "type": "integer"
        },
        "cfsStatus": {
          "type": "integer"
        },
        "customerFacingService": {
          "type": "array",
          "items": {
            "$ref": "EVCServiceConfigurationSummary"
          }
        },
        "resourceFacingService": {
          "type": "array",
          "items": {
            "$ref": "EVCServiceConfigurationSummary"
          }
        },
        "unis": {
          "type": "array",
          "items": {
            "$ref": "UNIServiceConfigurationSummary"
          }
        },
        "configuration": {
          "$ref": "EVCConfiguration"
        },
        "path": {
          "$ref": "NetworkPath"
        },
        "service": {
          "$ref": "EVCService"
        }
      }
    },
    "EthernetInterfaceSummary": {
      "id": "EthernetInterfaceSummary",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "customerInterfaceNumber": {
          "type": "integer"
        },
        "deviceConfigMethod": {
          "type": "string",
          "description" : "0 - not configured, 1 - using the CONSOLE port, 2 - using the AUXILIARY port, 3 - using a virtual terminal interface, 4 - download through a TFTP server, 5 - download through an FTP server, 6 - download through a NMS"
        },
        "physicalPort": {
          "$ref": "PhysicalPort"
        },
        "macAddress": {
          "$ref": "MACAddress"
        }
      }
    },
    "EthernetInterface": {
      "id": "EthernetInterface",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "customerInterfaceNumber": {
          "type": "integer"
        },
        "deviceConfigMethod": {
          "type": "string",
          "description" : "0 - not configured, 1 - using the CONSOLE port, 2 - using the AUXILIARY port, 3 - using a virtual terminal interface, 4 - download through a TFTP server, 5 - download through an FTP server, 6 - download through a NMS"
        },
        "hasCarrierDetect": {
          "type": "boolean"
        },
        "hasDataLink": {
          "type": "boolean"
        },
        "isInterfaceEnabled": {
          "type": "boolean"
        },
        "vendorInterfaceNumber": {
          "type": "integer"
        },
        "interfaceInitResetCount": {
          "type": "integer"
        },
        "syncLostCount": {
          "type": "integer"
        },
        "physicalPort": {
          "$ref": "PhysicalPort"
        },
        "macAddress": {
          "$ref": "MACAddress"
        },
        "resourcePort": {
          "$ref": "ResourcePort"
        }
      }
    },
    "TerminationPoint": {
      "id": "TerminationPoint",
      "type": "object",
      "properties": {
        "direction": {
          "type": "string",
          "description": "0: Unknown, 1: Sources Traffic, 2: Sinks Traffic, 3: Carries Traffic Bi-directionally"
        },
        "vendorTPName": {
          "type": "string"
        },
        "typeOfTP": {
          "type": "string",
          "description": "0: unknown, 1: uni-directional, source, 2: uni-directional, sink, 3: bi-directional, source, 4: bi-directional, sink"
        },
        "endPointLabel": {
          "type": "string"
        },
        "sideType": {
          "type": "string",
          "description": "Legal values::  0 - unknown, 1 - ProviderEdge, 2 - CustomerEdge, 3 - ProviderCore, 9 - Other"
        },
        "ethernetInterface": {
          "$ref": "EthernetInterfaceSummary"
        }
      }
    },
    "NetworkPath": {
      "id": "NetworkPath",
      "type": "object",
      "properties": {
        "alternatePathIdentifier": {
          "type": "string"
        },
        "noOfChannels": {
          "type": "number"
        },
        "topology": {
          "type": "string"
        },
        "signaling": {
          "type": "string"
        },
        "direction": {
          "type": "string"
        },
        "channelType": {
          "type": "string"
        },
        "framing": {
          "type": "string"
        },
        "terminationPoints": {
          "type": "array",
          "items": {
            "$ref": "TerminationPoint"
          }
        }
      }
    },
    "UNIConfig": {
      "id": "UNIConfig",
      "type": "object",
      "properties": {
        "configText": {
          "type": "string"
        },
        "configBinary": {
          "type": "array",
          "items": {
            "$ref": "number"
          }
        },
        "configLocation": {
          "$ref": "Link"
        },
        "configActivationType": {
          "type": "string",
          "description": "Base, Current, Backup, Planned, Test, Template"
        },
        "bandwidth": {
          "$ref": "Quantity"
        },
        "duplexMode": {
          "type": "integer"
        },
        "macLayer": {
          "type": "integer"
        },
        "isColorBlind": {
          "type": "boolean"
        },
        "isServiceMultiplexed": {
          "type": "boolean"
        },
        "vlanTagging": {
          "type": "integer",
          "description": "Defines how 802.1q VLAN Tags are handled at the UNI. Legal values are:  0 - unknown / undefined, 1 - VLAN Tags are prohibited at the UNI, 2 - VLAN Tags are mapped at the UNI (see the VLANtoEVCMap), 3 - VLAN Tags are preserved at the UNI via Q-in-Q VLAN Tag Stacking, 4 - VLAN Tags are preserved at the UNI via MAC-in-MAC Header Stacking"
        },
        "mtuSize": {
          "type": "integer"
        }
      }
    },
    "UNIServiceConfigurationSummary": {
      "id": "UNIServiceConfigurationSummary",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "hasStarted": {
          "type": "boolean"
        },
        "isServiceEnabled": {
          "type": "boolean"
        },
        "isMandatory": {
          "type": "boolean"
        }
      }
    },
    "UNIServiceConfiguration": {
      "id": "UNIServiceConfiguration",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "hasStarted": {
          "type": "boolean"
        },
        "isServiceEnabled": {
          "type": "boolean"
        },
        "isMandatory": {
          "type": "boolean"
        },
        "startMode": {
          "type": "number"
        },
        "isStateful": {
          "type": "boolean"
        },
        "isFCCReportable": {
          "type": "boolean"
        },
        "isTSP": {
          "type": "boolean"
        },
        "isResourceFacingService": {
          "type": "boolean"
        },
        "isCustomerFacingService": {
          "type": "boolean"
        },
        "rfsStatus": {
          "type": "number"
        },
        "cfsStatus": {
          "type": "number"
        },
        "customerFacingService": {
          "type": "array",
          "items": {
            "$ref": "UNIServiceConfigurationSummary"
          }
        },
        "resourceFacingService": {
          "type": "array",
          "items": {
            "$ref": "UNIServiceConfigurationSummary"
          }
        },
        "config": {
          "$ref": "UNIConfig"
        },
        "path": {
          "$ref": "NetworkPath"
        },
        "uniService": {
          "$ref": "UNIService"
        },
        "evc": {
          "$ref": "EVCServiceConfigurationSummary"
        }
      }
    },
    "EvcSummary": {
      "id": "EvcSummary",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        }
      }
    },
    "MACAddress": {
      "id": "MACAddress",
      "type": "object",
      "properties": {
        "macAddress": {
          "type": "string"
        },
        "hostname": {
          "type": "string"
        }
      }
    },
    "CardSummary": {
      "id": "CardSummary",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        }
      }
    },
    "PhysicalPortConfig": {
      "id": "PhysicalPortConfig",
      "properties": {
        "physicalMediaType": {
          "type": "number",
          "description": "0: Unknown, 1: 10BaseT, 2: 100BaseT, 3: 10-100BaseT, 4: 1000BaseT, 5: 10000BaseT, 6: DS-0, 7: DS-1, 8: DS-3, 9: OC-3, 10: OC-12, 11: OC-48, 12: OC-192, 13: T1, 14: T3, 15: E1, 16: E3, 17: RS-232C"
        },
        "maxSpeed": {
          "$ref": "Quantity",
          "description": "Special values:: 0: unknown, -1: auto-sense"
        },
        "duplexMode": {
          "type": "number",
          "description": "0: auto-negotiate duplex operation, 1: full-duplex, 2: half-duplex"
        },
        "mgmtInfoValidFor": {
          "$ref": "TimePeriod"
        },
        "retrievalMethodCurrent": {
          "type": "number",
          "description": "0:  Unknown, 1:  None, 2:  CLI, 3:  SNMP, 4:  TL1, 5:  CMIP, 6:  RMON, 7:  Proprietary"
        },
        "retrievalMethodsSupported": {
          "type": "number",
          "description": "0:  Unknown, 1:  None, 2:  CLI, 3:  SNMP, 4:  TL1, 5:  CMIP, 6:  RMON, 7:  Proprietary"
        },
        "configText": {
          "type": "string"
        },
        "configBinary": {
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        "configLocation": {
          "$ref": "Link"
        }
      }
    },
    "PhysicalPort": {
      "id": "PhysicalPort",
      "type": "object",
      "properties": {
        "duplexMode": {
          "type": "integer",
          "description": "0: Unknown, 1: Full Duplex, 2: Half Duplex"
        },
        "portNumber": {
          "type": "integer"
        },
        "typeOfPort": {
          "type": "integer",
          "description": "0: Unknown, 1: Ethernet, 2: FastEthernet, 3: Auto-Sensing, 4: GigabitEthernet, 5: FastGigabitEthernet, 6: DS-0, 7: DS-1, 8: DS-3, 9: T1, 10: T3, 11: E1, 12: E3, 13: OC-3, 14: OC-12, 15: OC-48, 16: OC-192, 17: RS-232C",
          "required": true
        },
        "vendorPortName": {
          "type": "string"
        },
        "ifType": {
          "type": "integer",
          "description": "0: Unknown, 1: 10BaseT, 2: 100BaseT, 3: 10-100BaseT, 4: 1000BaseT, 5: 10000BaseT, 6: DS-0, 7: DS-1, 8: DS-3, 9: OC-3, 10: OC-12, 11: OC-48, 12: OC-192",
          "required": true
        },
        "card": {
          "$ref": "CardSummary"
        },
        "configuration": {
          "$ref": "PhysicalPortConfig"
        }
      }
    },
    "CardSummary": {
      "id": "CardSummary",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "cardType": {
          "type": "string"
        },
        "cardMemorySize": {
          "type": "number"
        },
        "numberOfPorts": {
          "type": "integer"
        }
      }
    },
    "Card": {
      "id": "Card",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "cardCompatibilityResults": {
          "type": "string"
        },
        "daughterCardInstallStatus": {
          "type": "integer",
          "description": "0: Not Applicable (doesn't have any DaughterCards), 1: All Daughter Cards are installed, 2: Some Daughter Cards are installed, 3: No Daughter Cards are installed, 9: Daughter Card status and capability unknown"
        },
        "daughterCardOperatingStatus": {
          "type": "integer",
          "description": "0: Not Applicable (doesn't have any DaughterCards), 1: All Daughter Cards are operating correctly, 2: Some Daughter Cards are operating incorrectly, 3: No Daughter Cards are operating correctly, 9: Status and operating characteristics of daughter cards unknown"
        },
        "daughterCardRequirements": {
          "type": "integer"
        },
        "isConfigurablePhysically": {
          "type": "boolean"
        },
        "isMotherBoard": {
          "type": "boolean"
        },
        "isUniquePhysical": {
          "type": "boolean"
        },
        "maxDataWidth": {
          "type": "integer"
        },
        "slotLayout": {
          "type": "string"
        },
        "slotsRequired": {
          "type": "integer"
        },
        "uniqueRequirementsPhysical": {
          "type": "string"
        },
        "hardwareVersion": {
          "type": "string"
        },
        "cardType": {
          "type": "string"
        },
        "distToBase": {
          "type": "string"
        },
        "distToFront": {
          "type": "string"
        },
        "distToLeft": {
          "type": "string"
        },
        "cardMemorySize": {
          "type": "number"
        },
        "numberOfPorts": {
          "type": "integer"
        },
        "slots": {
          "type": "array",
          "items": {
            "$ref": "Slot"
          }
        }
      }
    },
    "ResourcePort": {
      "id": "ResourcePort",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "isEdgeResourcePort": {
          "type": "boolean"
        },
        "usageState": {
          "type": "number"
        },
        "crcStatus": {
          "type": "number"
        },
        "physicalPort": {
          "$ref": "PhysicalPort"
        }
      }
    },
    "UNIServiceSummary": {
      "id": "UNIServiceSummary",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "hasStarted": {
          "type": "boolean"
        },
        "isServiceEnabled": {
          "type": "boolean"
        },
        "isMandatory": {
          "type": "boolean"
        }
      }
    },
    "UNIService": {
      "id": "UNIService",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "hasStarted": {
          "type": "boolean"
        },
        "isServiceEnabled": {
          "type": "boolean"
        },
        "isMandatory": {
          "type": "boolean"
        },
        "startMode": {
          "type": "number",
          "description": "0:  Unknown, 1:  Automatically by the managed environment, 2:  Automatically by the owning device, 3:  Manually by the Provider of the Service, 4:  Manually by a Customer of the Provider, 5:  Any of the above"
        },
        "isStateful": {
          "type": "boolean"
        },
        "isFCCReportable": {
          "type": "boolean"
        },
        "isTSP": {
          "type": "boolean"
        },
        "isResourceFacingService": {
          "type": "boolean"
        },
        "isCustomerFacingService": {
          "type": "boolean"
        },
        "rfsStatus": {
          "type": "number"
        },"cfsStatus": {
          "type": "number"
        },
        "customerFacingService": {
          "type": "array",
          "items": {
            "$ref": "UNIServiceSummary"
          }
        },
        "resourceFacingService": {
          "type": "array",
          "items": {
            "$ref": "UNIServiceSummary"
          }
        },
        "config": {
          "$ref": "UNIConfig"
        },
        "networkPath": {
          "$ref": "NetworkPath"
        },
        "evc": {
          "$ref": "EvcSummary"
        }
      }
    },
    "Changes": {
      "id": "Changes",
      "properties": {
        "change": {
          "type": "string"
        }
      }
    },
    "ResourcePortDeltas": {
      "id": "ResourcePortDeltas",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "changes": {
          "type": "array",
          "items": {
            "$ref": "Changes"
          }
        },
        "resourcePortConfiguration": {
          "$ref": "ResourcePortConfiguration"
        },
        "currentPort": {
          "$ref": "ResourcePort"
        }
      }
    },
    "EthernetInterfaceConfiguration": {
      "id": "EthernetInterfaceConfiguration",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "customerInterfaceNumber": {
          "type": "number"
        },
        "deviceConfigMethod": {
          "type": "string",
          "description": "0 - not configured, 1 - using the CONSOLE port, 2 - using the AUXILIARY port, 3 - using a virtual terminal interface, 4 - download through a TFTP server, 5 - download through an FTP server, 6 - download through a NMS"
        },
        "hasCarrierDetect": {
          "type": "boolean"
        },
        "hasDataLink": {
          "type": "boolean"
        },
        "isInterfaceEnabled": {
          "type": "boolean"
        },
        "vendorInterfaceNumber": {
          "type": "number"
        },
        "interfaceInitResetCount": {
          "type": "number"
        },
        "syncLostCount": {
          "type": "number"
        },
        "ethernetInterface": {
          "type": "object",
          "items": {
            "$ref": "EthernetInterfaceSummary"
          }
        }
      }
    },
    "EthernetInterfaceDeltas": {
      "id": "EthernetInterfaceDeltas",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "ethernetInterfaceConfiguration": {
          "$ref": "EthernetInterfaceConfiguration"
        },
        "changes": {
          "type": "array",
          "items": {
            "$ref": "Changes"
          }
        }
      }
    },
    "ImpactedItem": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "ticket": {
          "$ref": "TicketSummary"
        },
        "accounts": {
          "type": "array",
          "items": {
            "$ref": "AccountSummary"
          }
        },
        "services": {
          "type": "array",
          "items": {
            "$ref": "ServiceSummary"
          }
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "ResourceSummary"
          }
        }
      }
    },
    "ServiceSpecificationSummary": {
      "id": "ServiceSpecificationSummary",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "description": {
          "type": "string"
        },
        "commonName": {
          "type": "string"
        },
        "isBundle": {
          "type": "boolean"
        }
      }
    },
    "ServiceSpecification": {
      "id": "ServiceSpecification",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "description": {
          "type": "string"
        },
        "commonName": {
          "type": "string"
        },
        "isBundle": {
          "type": "boolean"
        },
        "isCustomerFacing": {
          "type": "boolean"
        },
        "isResourceFacing": {
          "type": "boolean"
        },
        "isComposedOf": {
          "type": "array",
          "items": {
            "$ref": "ServiceSpecificationSummary"
          }
        },
        "customerFacingServiceSpec": {
          "type": "array",
          "items": {
            "$ref": "ServiceSpecificationSummary"
          }
        },
        "resourceFacingServiceSpec": {
          "type": "array",
          "items": {
            "$ref": "ServiceSpecificationSummary"
          }
        },
        "services": {
          "type": "array",
          "items": {
            "$ref": "ServiceSummary"
          }
        },
        "characteristics": {
          "type": "array",
          "items": {
            "$ref": "Characteristic"
          }
        },
        "serviceSpecificationTypes": {
          "$ref": "ServiceSpecificationType"
        }
      }
    },
    "ServiceSpecificationType": {
      "id": "ServiceSpecificationType",
      "type": "object",
      "properties": {
        "serviceSpecTypeName": {
          "type": "string"
        }
      }
    },
    "ConfigurationData": {
      "id": "ConfigurationData",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "mgmtInfoValidFor": {
          "$ref": "TimePeriod"
        },
        "retrievalMethodCurrent": {
          "type": "integer",
          "description": "0:  Unknown, 1:  None, 2:  CLI, 3:  SNMP, 4:  TL1, 5:  CMIP, 6:  RMON, 7:  Proprietary"
        },
        "retrievalMethodsSupported": {
          "type": "string",
          "description": "0:  Unknown, 1:  None, 2:  CLI, 3:  SNMP, 4:  TL1, 5:  CMIP, 6:  RMON, 7:  Proprietary"
        },
        "configText": {
          "type": "string"
        },
        "configBinary": {
          "$ref": "integer"
        },
        "configLocation": {
          "$ref": "Link"
        },
        "service": {
          "$ref": "ServiceSummary"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "ResourceSummary"
          }
        },
        "serviceConfiguration": {
          "$ref": "ServiceConfigurationSummary"
        },
        "attributes": {
          "type": "array",
          "items": {
            "$ref": "AttributeValuePair"
          }
        },
        "specification": {
          "$ref": "ConfigurationDataSpecification"
        }
      }
    },
    "ConfigurationDataSpecification": {
      "id": "ConfigurationDataSpecification",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "AttributeValuePair": {
      "type": "object",
      "properties": {
        "attributeName": {
          "type": "string"
        },
        "attributeValue": {
          "type": "string"
        }
      }
    },
    "ServiceSummary": {
      "id": "ServiceSummary",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "hasStarted": {
          "type": "boolean"
        },
        "isServiceEnabled": {
          "type": "boolean"
        },
        "isMandatory": {
          "type": "boolean"
        }
      }
    },
    "Service": {
      "id": "Service",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "hasStarted": {
          "type": "boolean"
        },
        "isServiceEnabled": {
          "type": "boolean"
        },
        "isMandatory": {
          "type": "boolean"
        },
        "startMode": {
          "type": "integer",
          "description": "0:  Unknown, 1:  Automatically by the managed environment, 2:  Automatically by the owning device, 3:  Manually by the Provider of the Service, 4:  Manually by a Customer of the Provider, 5:  Any of the above"
        },
        "isStateful": {
          "type": "boolean"
        },
        "isFCCReportable": {
          "type": "boolean"
        },
        "isTSP": {
          "type": "boolean"
        },
        "isResourceFacingService": {
          "type": "boolean"
        },
        "isCustomerFacingService": {
          "type": "boolean"
        },
        "rfsStatus": {
          "type": "integer"
        },
        "cfsStatus": {
          "type": "integer"
        },
        "serviceSpecification": {
          "$ref": "ServiceSpecificationSummary"
        },
        "tickets": {
          "type": "array",
          "items": {
            "$ref": "ImpactedItem"
          }
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "ResourceSummary"
          }
        },
        "products": {
          "type": "array",
          "items": {
            "$ref": "ProductSummary"
          }
        },
        "customerFacingService": {
          "type": "array",
          "items": {
            "$ref": "ServiceSummary"
          }
        },
        "resourceFacingService": {
          "type": "array",
          "items": {
            "$ref": "ServiceSummary"
          }
        },
        "sites": {
          "type": "array",
          "items": {
            "$ref": "SiteSummary"
          }
        },
        "characterisitcs": {
          "type": "array",
          "items": {
            "$ref": "Characteristic"
          }
        },
        "prefereneces": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "Preference"
          }
        },
        "configurationDatas": {
          "type": "array",
          "items": {
            "$ref": "ConfigurationData"
          }
        },
        "device": {
          "$ref": "DeviceSummary"
        },
        "productProperties": {
          "$ref": "ProductProperties"
        }
      }
    },
    "Resource": {
    },
    "UNIServiceDeltas": {
      "id": "UNIServiceDeltas",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "changes": {
          "type": "array",
          "items": {
            "$ref": "Changes"
          }
        },
        "uniServiceConfiguration": {
          "$ref": "UNIServiceConfigurationSummary"
        },
        "currentUniService": {
          "$ref": "UNIServiceSummary"
        }
      }
    },
    "EVCServiceDeltas": {
      "id": "EVCServiceDeltas",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "uniServiceConfiguration": {
          "$ref": "EVCServiceConfiguration"
        },
        "changes": {
          "type": "array",
          "items": {
            "$ref": "Changes"
          }
        }
      }
    },
    "Services": {
      "id": "Services",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "uniServiceDeltas": {
          "type": "array",
          "items": {
            "$ref": "UNIServiceDeltas"
          }
        },
        "evcServiceDeltas": {
          "type": "array",
          "items": {
            "$ref": "EVCServiceDeltas"
          }
        },
        "changes": {
          "type": "array",
          "items": {
            "$ref": "Changes"
          }
        }
      }
    },
    "Resources": {
      "type": "object",
      "properties": {
        "ethernetInterfaceDeltas": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "EthernetInterfaceDeltas"
          }
        },
        "resourcePortDeltas": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "ResourcePortDeltas"
          }
        }
      }
    },
    "ServiceSummary": {
      "id": "ServiceSummary",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        }
      }
    },
    "OrderDesign": {
      "id": "OrderDesign",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "status": {
          "type": "string"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        },
        "designArtifact": {
          "$ref": "Link"
        },
        "serviceDesign": {
          "$ref": "Services"
        },
        "resourceDesign": {
          "$ref": "Resources"
        }
      }
    },
    "Slot": {
      "id": "Slot",
      "type": "object",
      "properties": {
        "hasAdapter": {
          "type": "boolean"
        },
        "slotNumber": {
          "type": "integer"
        },
        "slotPurpose": {
          "type": "integer",
          "description": "0: Unknown, 1: System, 2: Networking, 3: Port Adapter, 4: Memory, 5: Hardware Assist, 6: Video, 7: General Computing, 8: General Purpose"
        },
        "purposeDescription": {
          "type": "string"
        },
        "card": {
          "$ref": "CardSummary"
        }
      }
    },
    "DeviceSummary": {
      "id": "DeviceSummary",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "macAddress": {
          "type": "string"
        }
      }
    },
    "Device": {
      "id": "Device",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "managementMethodCurrent": {
          "type": "number"
        },
        "managementMethodSupported": {
          "type": "number"
        },
        "usageState": {
          "type": "number"
        },
        "macAddress": {
          "type": "string"
        },
        "clliCode": {
          "$ref": "CLLICode"
        },
        "manufactureDateStamp": {
          "type": "date"
        },
        "otherIdentifier": {
          "type": "string"
        },
        "powerState": {
          "type": "number"
        },
        "serialNumber": {
          "type": "string"
        },
        "versionNumber": {
          "type": "string"
        },
        "validFor": {
          "$ref": "TimePeriod"
        },
        "hostName": {
          "type": "string"
        },
        "ownedBy": {
          "$ref": "Customer"
        },
        "characteristics": {
          "type": "array",
          "items": {
            "$ref": "Characteristic"
          }
        },
        "slot": {
          "$ref": "Slot"
        }
      }
    },
    "ResourceOrder": {
      "id": "ResourceOrder",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "description": {
          "type": "string"
        },
        "interactionDate": {
          "type": "string",
          "format": "date-time"
        },
        "interactionDateComplete": {
          "type": "string",
          "format": "date-time"
        },
        "interactionStatus": {
          "type": "string"
        },
        "device": {
          "$ref": "DeviceSummary"
        },
        "newSite": {
          "$ref": "SiteSummary"
        },
        "ethernetInterfaces": {
          "type": "array",
          "items": {
            "$ref": "EthernetInterfaceSummary"
          }
        },
        "orderDesign": {
          "$ref": "OrderDesign"
        }
      }
    },
    "AppliedCustomerBillingRateSpec": {
      "id": "AppliedCustomerBillingRateSpec",
      "type": "object",
      "properties": {

      }
    },
    "AppliedCustomerBillingVideoUsageRate": {
      "id": "AppliedCustomerBillingVideoUsageRate",
      "type": "object",
      "properties": {
        "isAdultContent": {
          "type": "boolean"
        },
        "videoUsageType": {
          "type": "string",
          "description": "VIDEO_ON_DEMAND, PAY_PER_VIEW"
        }
      }
    },
    "AppliedCustomerBillingTelephoneUsageRate": {
      "id": "AppliedCustomerBillingTelephoneUsageRate",
      "type": "object",
      "properties": {
        "calledNumber": {
          "type": "string"
        },
        "callingNumber": {
          "type": "string"
        },
        "callDuration": {
          "type": "string"
        },
        "appliedRate": {
          "type": "string"
        },
        "telephoneUsageType": {
          "type": "string",
          "description": "LONG_DISTANCE, DIRECTORY_ASSISTANCE, COLLECT, THIRD_PARTY, AT_LONG_DISTANCE"
        },
        "callDestination": {
          "type": "string"
        },
        "callDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "AppliedCustomerBillingTaxRate": {
      "id": "AppliedCustomerBillingTaxRate",
      "type": "object",
      "properties": {
        "customerTaxId": {
          "type": "string"
        },
        "taxType": {
          "type": "string"
        },
        "taxCategory": {
          "type": "string"
        }
      }
    },
    "RecurringAppliedCustomerBillingProductCharge": {
      "id": "RecurringAppliedCustomerBillingProductCharge",
      "type": "object",
      "properties": {
        "recurringChargeFromDate": {
          "type": "string",
          "format": "date-time"
        },
        "recurringChargeThroughDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "OneTimeAppliedCustomerBillingProductCharge": {
      "id": "OneTimeAppliedCustomerBillingProductCharge",
      "type": "object",
      "properties": {
        "oneTimeChargeType": {
          "type": "string"
        }
      }
    },
    "AppliedCustomerBillingRefund": {
      "id": "AppliedCustomerBillingRefund",
      "type": "object",
      "properties": {
        "refundType": {
          "type": "string",
          "description": "Cash, CreditCard"
        }
      }
    },
    "AppliedCustomerBillingAdjustment": {
      "id": "AppliedCustomerBillingAdjustment",
      "type": "object",
      "properties": {
        "adjustmentFromDate": {
          "type": "string",
          "format": "date-time"
        },
        "adjustmentThroughDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "BillChargeSummary": {
      "id": "BillChargeSummary",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "rateAmount": {
          "$ref": "Money"
        },
        "rateDescription": {
          "type": "string"
        },
        "billingRateCode": {
          "type": "string"
        },
        "account": {
          "$ref": "AccountSummary"
        },
        "customerBill": {
          "$ref": "CustomerBillSummary"
        }
      }
    },
    "BillCharge": {
      "id": "BillCharge",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "rateAmount": {
          "$ref": "Money"
        },
        "rateDescription": {
          "type": "string"
        },
        "billingRateCode": {
          "type": "string"
        },
        "account": {
          "$ref": "AccountSummary"
        },
        "customerBill": {
          "$ref": "CustomerBillSummary"
        },
        "paymentItem": {
          "$ref": "PaymentItemSummary"
        },
        "appliedCustomerBillingRateSpec": {
          "$ref": "AppliedCustomerBillingRateSpec"
        },
        "appliedCustomerBillingVideoUsageRate": {
          "$ref": "AppliedCustomerBillingVideoUsageRate"
        },
        "appliedCustomerBillingTelephoneUsageRate": {
          "$ref": "AppliedCustomerBillingTelephoneUsageRate"
        },
        "appliedCustomerBillingTaxRate": {
          "$ref": "AppliedCustomerBillingTaxRate"
        },
        "recurringAppliedCustomerBillingProductCharge": {
          "$ref": "RecurringAppliedCustomerBillingProductCharge"
        },
        "oneTimeAppliedCustomerBillingProductCharge": {
          "$ref": "OneTimeAppliedCustomerBillingProductCharge"
        },
        "appliedCustomerBillingRefund": {
          "$ref": "AppliedCustomerBillingRefund"
        },
        "appliedCustomerBillingAdjustment": {
          "$ref": "AppliedCustomerBillingAdjustment"
        }
      }
    },
    "CableServiceArea": {
      "id": "CableServiceArea",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "code": {
          "type": "string"
        },
        "geometry": {
          "$ref": "Geometry"
        }
      }
    },
    "GeographicAddress": {
      "id": "GeographicAddress",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "postalcode": {
          "type": "string"
        },
        "state_province": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "locality": {
          "type": "string"
        },
        "formattedAddressLine2": {
          "type": "string"
        },
        "formattedAddressLine1": {
          "type": "string"
        },
        "postalContacts": {
          "type": "array",
          "items": {
            "$ref": "PostalContact"
          }
        },
        "country": {
          "type": "string"
        }
      }
    },
    "Comment": {
      "id": "Comment",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "description": {
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "date-time"
        },
        "visibility": {
          "type": "string"
        },
        "submitter": {
          "$ref": "UserSummary"
        }
      }
    },
    "CustomerBillSummary": {
      "id": "CustomerBillSummary",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "billNo": {
          "type": "string"
        },
        "billAmount": {
          "$ref": "Money"
        },
        "billDate": {
          "type": "string",
          "format": "date-time"
        },
        "paymentDueDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "CustomerBill": {
      "id": "CustomerBill",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "billNo": {
          "type": "string"
        },
        "billAmount": {
          "$ref": "Money"
        },
        "billDate": {
          "type": "string",
          "format": "date-time"
        },
        "chargeDate": {
          "type": "string",
          "format": "date-time"
        },
        "creditDate": {
          "type": "string",
          "format": "date-time"
        },
        "mailingDate": {
          "type": "string",
          "format": "date-time"
        },
        "paymentDueDate": {
          "type": "string",
          "format": "date-time"
        },
        "billCharges": {
          "type": "array",
          "items": {
            "$ref": "BillChargeSummary"
          }
        },
        "document": {
          "$ref": "Document"
        },
        "financialCharges": {
          "type": "array",
          "items": {
            "$ref": "FinancialCharge"
          }
        },
        "customerBillSpec": {
          "$ref": "CustomerBillSpecSummary"
        },
        "account": {
          "$ref": "AccountSummary"
        },
        "paymentItems": {
          "type": "array",
          "items": {
            "$ref": "PaymentItemSummary"
          }
        }
      }
    },
    "FinancialCharge": {
      "type": "object"
    },
    "BillingPeriod": {
      "id": "BillingPeriod",
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "CustomerBillingCycleSpecification": {
      "id": "CustomerBillingCycleSpecification",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "billingDateShift": {
          "type": "integer"
        },
        "chargeDateOffset": {
          "type": "integer"
        },
        "creditDateOffset": {
          "type": "integer"
        },
        "mailingDateOffset": {
          "type": "integer"
        },
        "paymentDueDateOffset": {
          "type": "integer"
        },
        "validFor": {
          "$ref": "TimePeriod"
        },
        "customerBillSpecs": {
          "type": "array",
          "items": {
            "$ref": "CustomerBillSpecSummary"
          }
        },
        "billingPeriod": {
          "$ref": "BillingPeriod"
        }
      }
    },
    "CustomerBillPresentationMedia": {
      "id": "CustomerBillPresentationMedia",
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "CustomerBillFormat": {
      "id": "CustomerBillFormat",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "presentationMedia": {
          "type": "array",
          "items": {
            "$ref": "CustomerBillPresentationMedia"
          }
        }
      }
    },
    "CustomerBillSpecSummary": {
      "id": "CustomerBillSpecSummary",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "format": {
          "type": "array",
          "items": {
            "$ref": "CustomerBillFormat"
          }
        }
      }
    },
    "CustomerBillSpec": {
      "id": "CustomerBillSpec",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "validFor": {
          "$ref": "TimePeriod"
        },
        "customerBills": {
          "type": "array",
          "items": {
            "$ref": "CustomerBillSummary"
          }
        },
        "format": {
          "type": "array",
          "items": {
            "$ref": "CustomerBillFormat"
          }
        },
        "account": {
          "$ref": "AccountSummary"
        },
        "customerBillingCycleSpecifications": {
          "type": "array",
          "items": {
            "$ref": "CustomerBillingCycleSpecification"
          }
        }
      }
    },
    "CustomerOrder": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "type": "object",
          "$ref": "Link",
          "required": true
        }
      }
    },
    "CustomerOrderItem": {
      "id": "CustomerOrderItem",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "action": {
          "type": "string"
        },
        "interactionItemStatus": {
          "type": "string"
        },
        "quantity": {
          "$ref": "Quantity"
        }
      }
    },
    "CustomerPaymentSummary": {
      "id": "CustomerPaymentSummary",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "paymentConfirmation": {
          "type": "string"
        },
        "amount": {
          "$ref": "Money"
        },
        "remainingAmount": {
          "$ref": "Money"
        },
        "paymentDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "CustomerPayment": {
      "id": "CustomerPayment",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "paymentConfirmation": {
          "type": "string"
        },
        "amount": {
          "$ref": "Money"
        },
        "remainingAmount": {
          "$ref": "Money"
        },
        "paymentDate": {
          "type": "string",
          "format": "date-time"
        },
        "paymentItems": {
          "type": "array",
          "items": {
            "$ref": "PaymentItemSummary"
          }
        },
        "paymentMethods": {
          "type": "array",
          "items": {
            "$ref": "PaymentMethod"
          }
        }
      }
    },
    "Document": {
      "id": "Document",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "documentLocation": {
          "type": "string"
        },
        "documentNumber": {
          "type": "string"
        }
      }
    },
    "EmailContact": {
      "id": "EmailContact",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "emailAddress": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "preferred": {
          "type": "boolean"
        },
        "validFor": {
          "$ref": "TimePeriod"
        }
      }
    },
    "FaxNumber": {
      "id": "FaxNumber",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "type": {
          "type": "string"
        },
        "number": {
          "type": "string"
        },
        "validFor": {
          "$ref": "TimePeriod"
        }
      }
    },
    "PartySummary": {
      "id": "PartySummary",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Individual": {
      "id": "Individual",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "preferredName": {
          "type": "string"
        },
        "nationality": {
          "type": "string"
        },
        "placeOfBirth": {
          "type": "string"
        },
        "skills": {
          "type": "string"
        },
        "gender": {
          "type": "string",
          "description": "Male, Female"
        },
        "maritalStatus": {
          "type": "string",
          "description": "Single, Married"
        },
        "disabilities": {
          "description": "Vision_Impaired, Hearing_Impaired, Other"
        },
        "aliveDuring": {
          "$ref": "TimePeriod"
        },
        "validFor": {
          "$ref": "TimePeriod"
        },
        "identificationDetails": {
          "type": "array",
          "items": {
            "$ref": "IndividualIdentification"
          }
        },
        "alternateNames": {
          "type": "array",
          "items": {
            "$ref": "IndividualName"
          }
        },
        "individualName": {
          "$ref": "IndividualName"
        }
      }
    },
    "IndividualIdentification": {
      "id": "IndividualIdentification",
      "type": "object",
      "properties": {
        "identification": {
          "oneOf": [
            {"$ref": "StateIdentification"},
            {"$ref": "StudentIdentification"},
            {"$ref": "PassportIdentification"},
            {"$ref": "ContractorIdentification"},
            {"$ref": "DriversLicenseIdentification"},
            {"$ref": "BirthCertificateIdentification"},
            {"$ref": "NationalIdentityCardIdentification"},
            {"$ref": "SocialInsuranceIdentification"},
            {"$ref": "ProvincialIdentification"},
            {"$ref": "EmployeeIdentification"},
            {"$ref": "MedicalHealthCardIdentification"},
            {"$ref": "MembershipCardIdentification"},
            {"$ref": "SocialSecurityNrIdentification"},
            {"$ref": "AlternateIdentification"}
          ]
        }
      }
    },
    "IndividualName": {
      "id": "IndividualName",
      "type": "object",
      "properties": {
        "legalName": {
          "type": "string"
        },
        "familyNames": {
          "type": "string"
        },
        "qualifications": {
          "type": "string"
        },
        "formOfAddress": {
          "type": "string"
        },
        "givenNames": {
          "type": "string"
        },
        "aristocraticTitle": {
          "type": "string"
        },
        "familyGeneration": {
          "type": "string"
        },
        "preferredGivenName": {
          "type": "string"
        },
        "validFor": {
          "$ref": "TimePeriod"
        },
        "formattedName": {
          "type": "string"
        },
        "generation": {
          "type": "string"
        },
        "middleNames": {
          "type": "string"
        },
        "familyNamePrefix": {
          "type": "string"
        }
      }
    },
    "OrganizationSummary": {
      "id": "OrganizationSummary",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "Organization": {
      "id": "Organization",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "isLegalEntity": {
          "type": "boolean"
        },
        "existsDuring": {
          "$ref": "TimePeriod"
        },
        "validFor": {
          "$ref": "TimePeriod"
        },
        "identificationDetails": {
          "type": "array",
          "items": {
            "$ref": "OrganizationIdentification"
          }
        },
        "alternateNames": {
          "type": "array",
          "items": {
            "$ref": "OrganizationName"
          }
        },
        "organizationName": {
          "$ref": "OrganizationName"
        }
      }
    },
    "OrganizationIdentification": {
      "id": "OrganizationIdentification",
      "type": "object",
      "properties": {
        "identification" : {
          "type": "object",
          "oneOf": [
            { "$ref": "CompanyRegistration"},
            { "$ref": "TaxIdentification"}
          ]
        }
      }
    },
    "OrganizationName": {
      "id": "OrganizationName",
      "type": "object",
      "properties": {
        "organizationName": {
          "type": "string"
        },
        "tradingName": {
          "type": "string"
        },
        "validFor": {
          "$ref": "TimePeriod"
        },
        "nameType": {
          "type": "string"
        }
      }
    },
    "PaymentItemSummary": {
      "id": "PaymentItemSummary",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "appliedAmount": {
          "$ref": "Money"
        }
      }
    },
    "PaymentItem": {
      "id": "PaymentItem",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "appliedAmount": {
          "$ref": "Money"
        },
        "customerBill": {
          "$ref": "CustomerBillSummary"
        },
        "billCharge": {
          "$ref": "BillChargeSummary"
        },
        "customerPayment": {
          "$ref": "CustomerPaymentSummary"
        }
      }
    },
    "PaymentMethodSummary": {
      "id": "PaymentMethod",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "paymentMethodName": {
          "type": "string"
        },
        "paymentDescription": {
          "type": "string"
        }
      }
    },
    "PaymentMethod": {
      "id": "PaymentMethod",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "paymentMethodName": {
          "type": "string"
        },
        "paymentDescription": {
          "type": "string"
        },
        "customerPayment": {
          "type": "array",
          "items": {
            "$ref": "CustomerPaymentSummary"
          }
        },
        "paymentPlan": {
          "type": "array",
          "items": {
            "$ref": "PaymentPlanSummary"
          }
        },
        "paymentCard": {
          "$ref": "PaymentCard"
        },
        "tokenizedThirdParty": {
          "$ref": "TokenizedThirdParty"
        },
        "tokenizedPaymentCard": {
          "$ref": "TokenizedPaymentCard"
        },
        "fundsTransfer": {
          "$ref": "FundsTransfer"
        },
        "cash": {
          "$ref": "Cash"
        },
        "check": {
          "$ref": "Check"
        }
      }
    },
    "PaymentPlanSummary": {
      "id": "PaymentPlanSummary",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "priority": {
          "type": "integer"
        },
        "status": {
          "type": "boolean"
        },
        "paymentPlanType": {
          "$ref": "PaymentPlanType"
        },
        "paymentLimit": {
          "$ref": "Money"
        }
      }
    },
    "PaymentPlan": {
      "id": "PaymentPlan",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "priority": {
          "type": "integer"
        },
        "status": {
          "type": "boolean"
        },
        "paymentPlanType": {
          "$ref": "PaymentPlanType"
        },
        "paymentLimit": {
          "$ref": "Money"
        },
        "paymentMethod": {
          "$ref": "PaymentMethodSummary"
        },
        "accounts": {
          "type": "array",
          "items": {
            "$ref": "AccountSummary"
          }
        }
      }
    },
    "PostalContact": {
      "id": "PostalContact",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "type": {
          "type": "string"
        },
        "additionalDeliveryDetail": {
          "type": "string"
        },
        "propertyAddress": {
          "$ref": "PropertyAddress"
        },
        "validFor": {
          "$ref": "TimePeriod"
        }
      }
    },
    "Preference": {
      "id": "Preference",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "preferenceName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "unitOfMeasure": {
          "type": "string"
        },
        "rangeInterval": {
          "type": "string"
        },
        "specCharacteristicName": {
          "type": "string"
        },
        "specCharacteristicDescription": {
          "type": "string"
        },
        "valueType": {
          "type": "string"
        },
        "characteristicSequence": {
          "type": "integer"
        },
        "isSet": {
          "type": "boolean"
        },
        "validFor": {
          "$ref": "TimePeriod"
        },
        "preferences": {
          "type": "array",
          "items": {
            "$ref": "PreferenceSummary"
          }
        },
        "preferenceCategory": {
          "$ref": "PreferenceCategory"
        }
      }
    },
    "PreferenceSummary": {
      "id": "PreferenceSummary",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "preferenceName": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "unitOfMeasure": {
          "type": "string"
        },
        "valueType": {
          "type": "string"
        },
        "isSet": {
          "type": "boolean"
        },
        "preferenceCategory": {
          "$ref": "PreferenceCategory"
        }
      }
    },
    "PreferenceCategory": {
      "id": "PreferenceCategory",
      "type": "object",
      "properties": {
        "preferenceCategoryName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "preferenceCategoryId": {
          "type": "string"
        }
      }
    },
    "ProductSummary": {
      "id": "ProductSummary",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "name": {
          "type": "string"
        },
        "isBundle": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "productStatus": {
          "type": "string"
        },
        "productSerialNumber": {
          "type": "string"
        }
      }
    },
    "Product": {
      "id": "Product",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "name": {
          "type": "string"
        },
        "isBundle": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "productStatus": {
          "type": "string"
        },
        "productSerialNumber": {
          "type": "string"
        },
        "validFor": {
          "$ref": "TimePeriod"
        },
        "productPrices": {
          "type": "array",
          "items": {
            "$ref": "ProductPriceSummary"
          }
        },
        "productRelationships": {
          "type": "array",
          "items": {
            "$ref": "ProductRelationship"
          }
        },
        "products": {
          "type": "array",
          "items": {
            "$ref": "ProductSummary"
          }
        },
        "customerAccountInvolvements": {
          "type": "array",
          "items": {
            "$ref": "AccountProductAssignment"
          }
        },
        "productSpecification": {
          "$ref": "ProductSpecificationSummary"
        },
        "productOffering": {
          "$ref": "ProductOfferingSummary"
        },
        "customerFacingServices": {
          "type": "array",
          "items": {
            "$ref": "ServiceSummary"
          }
        },
        "productProperties": {
          "$ref": "ProductProperties"
        }
      }
    },
    "ProductRelationship": {
      "id": "ProductRelationship",
      "type": "object",
      "properties": {
        "relationshipType": {
          "type": "string"
        },
        "product": {
          "$ref": "ProductSummary"
        },
        "eplProduct": {
          "$ref": "EPLProductSummary"
        },
        "eplProductConfiguration": {
          "$ref": "EPLProductConfiguration"
        }
      }
    },
    "AccountProductAssignment": {
      "type": "object",
      "properties": {
        "involventType": {
          "type": "string"
        },
        "account": {
          "$ref": "Account"
        },
        "product": {
          "$ref": "ProductSummary"
        },
        "eplProducts": {
          "$ref": "EPLProductSummary"
        },
        "eplProductConfigurations": {
          "$ref": "EPLProductConfigurationSummary"
        }
      }
    },
    "ProductProperties": {
      "id": "ProductProperties",
      "type": "object",
      "properties": {
        "service": {
          "$ref": "ServiceSummary"
        }
      }
    },
    "ProductOffering": {
      "id": "ProductOffering",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "eplProducts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "EPLProduct"
          }
        },
        "status": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "link": {
          "type": "object",
          "$ref": "Link",
          "required": true
        },
        "validFor": {
          "type": "object",
          "$ref": "TimePeriod",
          "required": true
        },
        "eplProductConfigurations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "EPLProductConfiguration"
          }
        },
        "products": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "Product"
          }
        },
        "isBundle": {
          "type": "boolean"
        }
      }
    },
    "ProductPriceSummary": {
      "id": "ProductPriceSummary",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "validFor": {
          "$ref": "TimePeriod"
        }
      }
    },
    "ProductPrice": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "validFor": {
          "$ref": "TimePeriod"
        },
        "compositePrices": {
          "type": "array",
          "items": {
            "$ref": "ProductPriceSummary"
          }
        },
        "partOf": {
          "$ref": "ProductPriceSummary"
        },
        "product": {
          "$ref": "ProductSummary"
        },
        "prodPriceAlteration": {
          "$ref": "ProdPriceAlteration"
        },
        "prodPriceCharge": {
          "$ref": "ProdPriceCharge"
        },
        "componentPrice": {
          "$ref": "ComponentPrice"
        },
        "eplProduct": {
          "$ref": "EPLProduct"
        },
        "eplProductConfiguration": {
          "$ref": "EPLProductConfiguration"
        }
      }
    },
    "EPLProductConfigurationSummary": {
      "id": "EPLProductConfigurationSummary",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "name": {
          "type": "string"
        },
        "isBundle": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "productStatus": {
          "type": "string"
        }
      }
    },
    "EPLProductConfiguration": {
      "id": "EPLProductConfiguration",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "name": {
          "type": "string"
        },
        "isBundle": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "productStatus": {
          "type": "string"
        },
        "productSerialNumber": {
          "type": "string"
        },
        "validFor": {
          "$ref": "TimePeriod"
        },
        "products": {
          "type": "array",
          "items": {
            "$ref": "EPLProductConfigurationSummary"
          }
        },
        "productRelationships": {
          "type": "array",
          "items": {
            "$ref": "ProductRelationship"
          }
        },
        "productPrices": {
          "type": "array",
          "items": {
            "$ref": "ProductPriceSummary"
          }
        },
        "customerAccountInvolvements": {
          "type": "array",
          "items": {
            "$ref": "AccountProductAssignment"
          }
        },
        "productSpecification": {
          "$ref": "ProductSpecificationSummary"
        },
        "productOffering": {
          "$ref": "ProductOfferingSummary"
        },
        "uni": {
          "type": "array",
          "items": {
            "$ref": "UNIServiceConfigurationSummary"
          }
        },
        "evc": {
          "$ref": "EVCServiceConfigurationSummary"
        },
        "configuration": {
          "$ref": "EPLConfigurationSummary"
        },
        "eplProduct": {
          "$ref": "EPLProductSummary"
        }
      }
    },
    "ProdPriceCharge": {
      "id": "ProdPriceCharge",
      "type": "object",
      "properties": {
        "price": {
          "$ref": "Money"
        },
        "priceType": {
          "type": "string"
        },
        "quantity": {
          "$ref": "Quantity"
        },
        "period": {
          "type": "string"
        }
      }
    },
    "ComponentPrice": {
      "type": "object",
      "properties": {
        "priceType": {
          "type": "string"
        },
        "unitOfMeasure": {
          "$ref": "Quantity"
        },
        "price": {
          "$ref": "Money"
        }
      }
    },
    "StatusEntry": {
      "id": "StatusEntry",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "priorState": {
          "type": "string"
        },
        "currentState": {
          "type": "string"
        },
        "submitter": {
          "$ref": "UserSummary"
        }
      }
    },
    "SystemContact": {
      "id": "SystemContact",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "type": {
          "type": "string"
        },
        "contactNotificationMethod": {
          "type": "string"
        },
        "contactNotificationID": {
          "type": "string"
        },
        "validFor": {
          "$ref": "TimePeriod"
        }
      }
    },
    "TelephoneNumber": {
      "id": "TelephoneNumber",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "type": {
          "type": "string"
        },
        "number": {
          "type": "string"
        },
        "extension": {
          "type": "string"
        },
        "validFor": {
          "$ref": "TimePeriod"
        }
      }
    },
    "UserSummary": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "username": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "profile": {
          "$ref": "PartySummary"
        }
      }
    },
    "User": {
      "id": "User",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "username": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "profile": {
          "$ref": "PartySummary"
        },
        "contactPhones": {
          "type": "array",
          "items": {
            "$ref": "TelephoneNumber"
          }
        },
        "contactEmails": {
          "type": "array",
          "items": {
            "$ref": "EmailContact"
          }
        },
        "primaryAccount": {
          "$ref": "AccountSummary"
        },
        "accounts": {
          "type": "array",
          "items": {
            "$ref": "AccountSummary"
          }
        },
        "devices": {
          "type": "array",
          "items": {
            "$ref": "DeviceSummary"
          }
        },
        "interactions": {
          "type": "array",
          "items": {
            "$ref": "Link"
          }
        },
        "transitions": {
          "type": "array",
          "items": {
            "$ref": "Link"
          }
        },
        "userCredentials": {
          "type": "array",
          "items": {
            "$ref": "UserCredential"
          }
        }
      }
    },
    "UserCredential": {
      "id": "UserCredential",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "type": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "userAccountController": {
          "type": "string"
        },
        "placeOfBirth": {
          "type": "string"
        },
        "userCredentialCategory": {
          "type": "string"
        },
        "validFor": {
          "$ref": "TimePeriod"
        },
        "adminStatus": {
          "type": "string",
          "description": "Active, Suspended, Inactive, Closed"
        },
        "usageType": {
          "type": "string",
          "description": "Individual, Joint, Other"
        },
        "password": {
          "type": "string"
        },
        "serviceProvider": {
          "type": "string"
        },
        "serviceProviderName": {
          "type": "string"
        },
        "serviceProviderData": {
          "type": "string"
        },
        "characteristics": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "Characteristic"
          }
        }
      }
    },
    "Characteristic": {
      "id": "Characteristic",
      "type": "object",
      "properties": {
        "characteristicId": {
          "type": "string"
        },
        "characteristicName": {
          "type": "string"
        },
        "characteristicDescription": {
          "type": "string"
        },
        "unique": {
          "type": "boolean"
        },
        "valueType": {
          "type": "string"
        },
        "minCardinality": {
          "type": "integer"
        },
        "maxCardinality": {
          "type": "integer"
        },
        "extensible": {
          "type": "boolean"
        },
        "derivationFormula": {
          "type": "string"
        },
        "characteristicSequence": {
          "type": "integer"
        },
        "validFor": {
          "$ref": "TimePeriod"
        },
        "characteristicCategory": {
          "type": "object",
          "$ref": "CharacteristicCategory",
          "required": true
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "CharacteristicValue"
          }
        }
      }
    },
    "CharacteristicCategory": {
      "id": "CharacteristicCategory",
      "type": "object",
      "properties": {
        "characteristicCategoryId": {
          "type": "string"
        },
        "categoryName": {
          "type": "string"
        },
        "categoryDescription": {
          "type": "string"
        }
      }
    },
    "CharacteristicCollection": {
      "id": "CharacteristicCollection",
      "type": "object",
      "properties": {
        "characteristic": {
          "type": "array",
          "items": {
            "$ref": "Characteristic"
          }
        }
      }
    },
    "CharacteristicValue": {
      "id": "CharacteristicValue",
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        },
        "unitOfMeasure": {
          "type": "string"
        },
        "valueType": {
          "type": "string"
        },
        "isDefaultValue": {
          "type": "boolean"
        },
        "valueFrom": {
          "type": "string"
        },
        "valueTo": {
          "type": "string"
        },
        "rangeInterval": {
          "type": "string"
        },
        "valueSequence": {
          "type": "integer"
        },
        "validFor": {
          "$ref": "TimePeriod"
        }
      }
    },
    "UserGroup": {
      "id": "UserGroup",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "name": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "validFor": {
          "$ref": "TimePeriod"
        },
        "users": {
          "type": "array",
          "items": {
            "$ref": "UserSummary"
          }
        },
        "organization": {
          "$ref": "OrganizationSummary"
        }
      }
    },
    "CableModem": {
      "id" : "CableModem",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "link": {
          "$ref": "Link"
        },
        "installedDOCSISVersion": {
          "type": "string"
        },
        "maxChannelsSupported": {
          "type": "integer"
        },
        "numActiveChannels": {
          "type": "integer"
        },
        "usageState": {
          "type": "integer"
        },
        "manufactureDateStamp": {
          "type": "string",
          "format": "date-time"
        },
        "otherIdentifier": {
          "type": "string"
        },
        "powerState": {
          "type": "integer"
        },
        "serialNumber": {
          "type": "string"
        },
        "versionNumber": {
          "type": "string"
        },
        "deviceActivationStatus": {
          "type": "string",
          "description": "Activation_Pending, Activated, Activation_Failed"
        },
        "backplaneIndependent": {
          "type": "boolean"
        },
        "backplaneNumber": {
          "type": "integer"
        },
        "configurationOrder": {
          "type": "string"
        },
        "deviceGroupID": {
          "type": "string"
        },
        "isComposite": {
          "type": "boolean"
        },
        "canMixPower": {
          "type": "boolean"
        },
        "hasPowerManagement": {
          "type": "boolean"
        },
        "powerManagementCapabilities": {
          "type": "string"
        },
        "deviceProviderType": {
          "type": "string",
          "description": "CustomerProvided, CompanyProvided"
        },
        "deviceManagementType": {
          "type": "string",
          "description": "CustomerManaged, ProviderManaged"
        },
        "macAddress": {
          "$ref": "MACAddress"
        },
        "channel": {
          "type": "array",
          "items": {
            "$ref": "CableModemChannel"
          }
        },
        "assignedCMTS": {
          "$ref": "CMTSCableModemAssignment"
        },
        "docsisinterface": {
          "$ref": "DOCSISCableInterface"
        },
        "serviceSite": {
          "$ref": "SiteSummary"
        },
        "fiberNode": {
          "$ref": "FiberNode"
        }
      }
    },
    "DOCSISCableInterface": {
      "type": "object",
      "properties": {
        "mtuSupported": {
          "type": "integer"
        },
        "hasDataLink": {
          "type": "boolean"
        },
        "vendorInterfaceNumber": {
          "type": "string"
        },
        "lrStatus": {
          "type": "integer"
        },
        "t3RangingResponseTimeouts": {
          "type": "integer"
        },
        "mtuCurrent": {
          "type": "integer"
        },
        "isInterfaceEnabled": {
          "type": "boolean"
        },
        "networkPath": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "NetworkPath"
          }
        },
        "isOperational": {
          "type": "boolean"
        },
        "correctedCodewordsIn": {
          "type": "integer"
        },
        "customerInterfaceNumber": {
          "type": "string"
        },
        "t4RangingRequestWindowTimeouts": {
          "type": "integer"
        },
        "usageState": {
          "type": "integer"
        },
        "interfaceInitResetCount": {
          "type": "integer"
        },
        "serviceState": {
          "type": "integer"
        },
        "supportsMLPPP": {
          "type": "boolean"
        },
        "badCodewordsIn": {
          "type": "integer"
        },
        "hasCarrierDetect": {
          "type": "boolean"
        },
        "syncLostCount": {
          "type": "integer"
        },
        "goodCodewordsIn": {
          "type": "integer"
        },
        "deviceConfigMethod": {
          "type": "integer"
        }
      }
    },
    "CMTSCableModemAssignment": {
      "id": "CMTSCableModemAssignment",
      "type": "object",
      "properties": {
        "cmStatus": {
          "type": "integer",
          "description": "1 - other than below, 2 - ranging, 3 - ranging aborted, 4 - ranging complete, 5 - IP complete (IP Address DHCP-assigned), 6 - registration complete (aka operational), 7 - access denied, 8 - RESERVED, 9 - registered, BPI initialized"
        },
        "cmPreEqualized": {
          "type": "boolean"
        },
        "cableModem": {
          "$ref": "CableModemSummary"
        },
        "cmts": {
          "$ref": "CMTSSummary"
        }
      }
    },
    "CableModemChannel": {
      "type": "object",
      "properties": {
        "snr": {
          "type": "object",
          "$ref": "Quantity",
          "required": true
        },
        "modulationType": {
          "type": "integer"
        },
        "link": {
          "type": "object",
          "$ref": "Link",
          "required": true
        },
        "warnThresholdPercent": {
          "type": "integer"
        },
        "operationalState": {
          "type": "integer"
        },
        "isPreEqualized": {
          "type": "boolean"
        },
        "overSubscription": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "modulationProfileNumber": {
          "type": "integer"
        },
        "originalMteID": {
          "type": "string"
        },
        "logicalAlarmStatus": {
          "type": "integer"
        },
        "mteAdministrativeState": {
          "type": "integer"
        },
        "bpsAvailable": {
          "type": "integer"
        },
        "mteID": {
          "type": "string"
        },
        "channelWidthHz": {
          "type": "number"
        },
        "modulationChannelType": {
          "type": "integer"
        },
        "additionalInfo": {
          "type": "string"
        },
        "isMTEOperational": {
          "type": "boolean"
        },
        "transmitOffset": {
          "type": "integer"
        },
        "bpsAssigned": {
          "type": "integer"
        },
        "transmitPower": {
          "type": "object",
          "$ref": "Quantity",
          "required": true
        },
        "logicalAlarmReportingEnabled": {
          "type": "boolean"
        },
        "channelFrequencyHz": {
          "type": "number"
        },
        "typeOfMTE": {
          "type": "integer"
        },
        "modulationConstellation": {
          "type": "integer"
        },
        "receivePower": {
          "type": "object",
          "$ref": "Quantity",
          "required": true
        }
      }
    }
  }
}
